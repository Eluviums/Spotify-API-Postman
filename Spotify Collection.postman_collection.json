{
	"info": {
		"_postman_id": "d0f66868-a832-4eba-ab05-236da46bc3cf",
		"name": "Spotify Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18952584"
	},
	"item": [
		{
			"name": "USERS",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Full Current User's Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : { \r",
											"        \"display_name\":  {\"type\" : \"string\"},\r",
											"        \"explicit_content\": {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"            \"filter_enabled\":  {\"type\" : \"boolean\"},\r",
											"            \"filter_locked\":  {\"type\" : \"boolean\"},\r",
											"            }\r",
											"        },\r",
											"        \"external_urls\": {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"            \"{key}\" : {\"type\" : \"string\"},\r",
											"            \"{value}\" : {\"type\" : \"string\"},\r",
											"            },\r",
											"    },\r",
											"    \"followers\": {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"            \"href\": {\"type\" : \"null\"},\r",
											"            \"total\": {\"type\" : \"integer\"},\r",
											"        }\r",
											"    },\r",
											"    \"href\": {\"type\" : \"string\"},\r",
											"    \"id\": {\"type\" : \"string\"},\r",
											"    \"images\": {\r",
											"            \"type\" : \"array\",\r",
											"            \"properties\" : {\r",
											"                \"height\" : {\"type\" : \"integer\"},\r",
											"                \"url\" : {\"type\" : \"string\"},\r",
											"                \"width\" : {\"type\" : \"integer\"},\r",
											"            }\r",
											"    },\r",
											"    \"product\": {\"type\" : \"string\"},\r",
											"    \"type\": {\"type\" : \"string\"},\r",
											"    \"uri\": {\"type\" : \"string\"},\r",
											"    },\r",
											"    \"required\": [ \r",
											"         \"display_name\", \r",
											"         \"external_urls\",\r",
											"         \"followers\",\r",
											"         \"href\",\r",
											"         \"id\",\r",
											"         \"images\",\r",
											"         \"type\",\r",
											"         \"uri\",\r",
											"    ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"//Create variable user id for next request\r",
											"if (pm.response.to.have.status(200) && pm.response.to.have.jsonSchema(schema)) {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.environment.set(\"user_id\", jsonData.id);\r",
											"};\r",
											"\r",
											"pm.test(\"Verify user id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"user_id\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Other's Profile info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : { \r",
											"        \"display_name\":  {\"type\" : \"string\"},\r",
											"        \"external_urls\": {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"            \"{key}\" : {\"type\" : \"string\"},\r",
											"            \"{value}\" : {\"type\" : \"string\"},\r",
											"            },\r",
											"    },\r",
											"    \"followers\": {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"            \"href\": {\"type\" : \"null\"},\r",
											"            \"total\": {\"type\" : \"integer\"},\r",
											"        }\r",
											"    },\r",
											"    \"href\": {\"type\" : \"string\"},\r",
											"    \"id\": {\"type\" : \"string\"},\r",
											"    \"images\": {\r",
											"            \"type\" : \"array\",\r",
											"            \"properties\" : {\r",
											"                \"height\" : {\"type\" : \"integer\"},\r",
											"                \"url\" : {\"type\" : \"string\"},\r",
											"                \"width\" : {\"type\" : \"integer\"},\r",
											"            }\r",
											"    },\r",
											"    \"type\": {\"type\" : \"string\"},\r",
											"    \"uri\": {\"type\" : \"string\"},\r",
											"    },\r",
											"     \"required\": [\r",
											"         \"display_name\",\r",
											"         \"external_urls\",\r",
											"         \"followers\",\r",
											"         \"href\",\r",
											"         \"id\",\r",
											"         \"images\",\r",
											"         \"type\",\r",
											"         \"uri\",\r",
											"     ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/paparumbo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"paparumbo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow playlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQC0r5OkKkAcOrfuRe8J1Sa5Y4lcb5EXwGm25mA-HOenmgRxjoFLaFN90nFIP39QSpFG4xBxfS2gI1t9nv4o_8WiarSRtp-VDBOhuCInB9oDgS82nvWFXfIKeM0AFOTCkI-7lqXQ0U8RdUfqws7AxKemSm8Y8tPXwghAA2E3Fc7LXLR8JMCueoCnusOS75D6fb7fPQ4lwfjj2VgKjtoztJzMnWZIxLcvArxn0pE5y3PJgN54Gw"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"public\":true}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/37i9dQZF1DWUrPBdYfoJvz/followers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"37i9dQZF1DWUrPBdYfoJvz",
										"followers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unfollow Playlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBLibF8_-8hvbC99G63qcfNBMdbY-VJ_iZnhBCwm8FLM9u7eGH2Kkpq6HVvAKMc0DPr5wXAiXUzEDn3YzZAaZQy3lTKY_J8-Y2cM1n2Zk_EShcPnCScz_pJ93ISb3lBSYhqP30HaD8tKJhkd9GKVxmWompPRk90wmek4ihmTWhbSoQW9HlOd_kbgZPZzS1kTo3dk2Mwau6fezrzagg92vvLPGge42TfftAz9TlUYXWxVpBpLgZ8EZWPAajBO4Eaxs9zWt6TgOK7Cl3UixdX5HpiXz_jK1Rwin4nUdqIiRsJd0PjncZsnRj50YWrxOj8"
									}
								],
								"url": {
									"raw": "{{base_url}}/playlists/37i9dQZF1DWUrPBdYfoJvz/followers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"37i9dQZF1DWUrPBdYfoJvz",
										"followers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Followed Artists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"    \"definitions\": {\r",
											"        \"Welcome\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"artists\": {\r",
											"                    \"$ref\": \"#/definitions/Artists\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"artists\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        },\r",
											"        \"Artists\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Item\"\r",
											"                    }\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"cursors\": {\r",
											"                    \"$ref\": \"#/definitions/Cursors\"\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"cursors\",\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Artists\"\r",
											"        },\r",
											"        \"Cursors\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"after\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"after\"\r",
											"            ],\r",
											"            \"title\": \"Cursors\"\r",
											"        },\r",
											"        \"Item\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                    \"$ref\": \"#/definitions/Followers\"\r",
											"                },\r",
											"                \"genres\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"popularity\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/Type\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"external_urls\",\r",
											"                \"followers\",\r",
											"                \"genres\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"popularity\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Item\"\r",
											"        },\r",
											"        \"ExternalUrls\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"spotify\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"spotify\"\r",
											"            ],\r",
											"            \"title\": \"ExternalUrls\"\r",
											"        },\r",
											"        \"Followers\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Followers\"\r",
											"        },\r",
											"        \"Image\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"height\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"url\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"width\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"height\",\r",
											"                \"url\",\r",
											"                \"width\"\r",
											"            ],\r",
											"            \"title\": \"Image\"\r",
											"        },\r",
											"        \"Type\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"artist\"\r",
											"            ],\r",
											"            \"title\": \"Type\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validating Schema\", () => {\r",
											"    pm.response.to.have.jsonSchema\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQC1pLI4GUHhiDq4-D6H9dc2kumiPXoMRKlGswvjqH2vQiqQUJ6pDFBuGQ6Ch2WLr1DvoxNgLIwdfi2N0s_zOMeyPO9K-EashzAM1N4oJAIEwTdTzsxg5T3Y9W-j_oBUEGSJBPjIHIXSH4x9p5pCzInKRC88AP1GQCcInqJC7b7MDfO1R63Ipo3-euyr"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/following?type=artist&after=0VOR7Ie9xUSb45fzIIVJQ1&limit=20",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "after",
											"value": "0VOR7Ie9xUSb45fzIIVJQ1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow Artists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAFYp2naZ86f_Pbf6FNvycSaE8M81V4jwELQC7L9v-iTiU2Gv8LlqsrNO_jBJvjbf3BMtARtPlFIHRZ7m4k224sDO5SJ1fsMCVzZjTaUYP-mfVgOG4cYmVznNNjne2fR9TCugAiP9_gjVxZtnTUh6QjThQyhOVAWV77Y8fWzhtCfwIkSqi2Ly_FDQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unfollow Artists ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQCmyGe5sP_2uk_FTsGt1cGVSg-O-hd1p193fmteKr2rfwNItwLB7pquL6Yb4P2hxJLMITRzepThQPHCTMnRvSQQNYqePI87kkV4Kx6PEkpNdxXLmAl5NrpfsBsrQAoF6XO0m68vHDQIeRLC5xjnygBOesGcRikM2dZM_FJ5M2f1e2my_df8mwr2ug"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Get Current User's Profile (401 Unauthorized)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (401)\r",
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/me",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a User's Profile (404 Not Found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (404)\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://api.spotify.com/v1/users/{{$randomUrl}}",
									"protocol": "https",
									"host": [
										"api",
										"spotify",
										"com"
									],
									"path": [
										"v1",
										"users",
										"{{$randomUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow playlist with invalid id (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.to.have.status(404)){\r",
											"    pm.test(\"Response is showing error, Invalid playlist Id\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 404 Not Found\", function(){\r",
											"        pm.response.to.have.status(404)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQC0r5OkKkAcOrfuRe8J1Sa5Y4lcb5EXwGm25mA-HOenmgRxjoFLaFN90nFIP39QSpFG4xBxfS2gI1t9nv4o_8WiarSRtp-VDBOhuCInB9oDgS82nvWFXfIKeM0AFOTCkI-7lqXQ0U8RdUfqws7AxKemSm8Y8tPXwghAA2E3Fc7LXLR8JMCueoCnusOS75D6fb7fPQ4lwfjj2VgKjtoztJzMnWZIxLcvArxn0pE5y3PJgN54Gw"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"public\":true}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{$randomUUID}}/followers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{$randomUUID}}",
										"followers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unfollow Playlist with invalid id (404) Not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.to.have.status(404)){\r",
											"    pm.test(\"Response is showing error, Invalid playlist Id\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 404 Not Found\", function(){\r",
											"        pm.response.to.have.status(404)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBLibF8_-8hvbC99G63qcfNBMdbY-VJ_iZnhBCwm8FLM9u7eGH2Kkpq6HVvAKMc0DPr5wXAiXUzEDn3YzZAaZQy3lTKY_J8-Y2cM1n2Zk_EShcPnCScz_pJ93ISb3lBSYhqP30HaD8tKJhkd9GKVxmWompPRk90wmek4ihmTWhbSoQW9HlOd_kbgZPZzS1kTo3dk2Mwau6fezrzagg92vvLPGge42TfftAz9TlUYXWxVpBpLgZ8EZWPAajBO4Eaxs9zWt6TgOK7Cl3UixdX5HpiXz_jK1Rwin4nUdqIiRsJd0PjncZsnRj50YWrxOj8"
									}
								],
								"url": {
									"raw": "{{base_url}}/playlists/{{$randomUUID}}/followers",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{$randomUUID}}",
										"followers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Followed Artists with unallowed type (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Invalid type\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQC1pLI4GUHhiDq4-D6H9dc2kumiPXoMRKlGswvjqH2vQiqQUJ6pDFBuGQ6Ch2WLr1DvoxNgLIwdfi2N0s_zOMeyPO9K-EashzAM1N4oJAIEwTdTzsxg5T3Y9W-j_oBUEGSJBPjIHIXSH4x9p5pCzInKRC88AP1GQCcInqJC7b7MDfO1R63Ipo3-euyr"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/following?type=track",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "track"
										},
										{
											"key": "after",
											"value": "0VOR7Ie9xUSb45fzIIVJQ1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "20",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow Artists with invalid type (400 Bad Request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Invalid type\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAFYp2naZ86f_Pbf6FNvycSaE8M81V4jwELQC7L9v-iTiU2Gv8LlqsrNO_jBJvjbf3BMtARtPlFIHRZ7m4k224sDO5SJ1fsMCVzZjTaUYP-mfVgOG4cYmVznNNjne2fR9TCugAiP9_gjVxZtnTUh6QjThQyhOVAWV77Y8fWzhtCfwIkSqi2Ly_FDQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist%user",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist%user"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow Artists (exceeding the limit) (400 Bad Request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, too many ids given\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAFYp2naZ86f_Pbf6FNvycSaE8M81V4jwELQC7L9v-iTiU2Gv8LlqsrNO_jBJvjbf3BMtARtPlFIHRZ7m4k224sDO5SJ1fsMCVzZjTaUYP-mfVgOG4cYmVznNNjne2fR9TCugAiP9_gjVxZtnTUh6QjThQyhOVAWV77Y8fWzhtCfwIkSqi2Ly_FDQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"description": "50 - Maximum",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Follow Artists (less than a limit) (400 Bad Request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, No ids given\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAFYp2naZ86f_Pbf6FNvycSaE8M81V4jwELQC7L9v-iTiU2Gv8LlqsrNO_jBJvjbf3BMtARtPlFIHRZ7m4k224sDO5SJ1fsMCVzZjTaUYP-mfVgOG4cYmVznNNjne2fR9TCugAiP9_gjVxZtnTUh6QjThQyhOVAWV77Y8fWzhtCfwIkSqi2Ly_FDQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"description": "50 - Maximum",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unfollow artists which user is not followed previously",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(204)){\r",
											"    pm.test(\"Response should display an error about artist which user is not follow\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQCmyGe5sP_2uk_FTsGt1cGVSg-O-hd1p193fmteKr2rfwNItwLB7pquL6Yb4P2hxJLMITRzepThQPHCTMnRvSQQNYqePI87kkV4Kx6PEkpNdxXLmAl5NrpfsBsrQAoF6XO0m68vHDQIeRLC5xjnygBOesGcRikM2dZM_FJ5M2f1e2my_df8mwr2ug"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n\"527tM0glHTJaBcb7UxNeX0\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unfollow artists (exceeding the limit) (400 Bad Request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, too many ids given\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQCmyGe5sP_2uk_FTsGt1cGVSg-O-hd1p193fmteKr2rfwNItwLB7pquL6Yb4P2hxJLMITRzepThQPHCTMnRvSQQNYqePI87kkV4Kx6PEkpNdxXLmAl5NrpfsBsrQAoF6XO0m68vHDQIeRLC5xjnygBOesGcRikM2dZM_FJ5M2f1e2my_df8mwr2ug"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": [\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\",\r\n    \"4QK3YJ6hzJdhJHE9q7kbVV\",\r\n    \"4G1ZsxfEEztbE1VcnNInPg\",\r\n    \"3GM5cpCBadq2PMHjFoEvhK\",\r\n    \"0sf2u7qJQLxkZjon6FsvJT\",\r\n    \"74ASZWbe4lXaubB36ztrGX\"\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/me/following?type=artist",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"following"
									],
									"query": [
										{
											"key": "type",
											"value": "artist"
										},
										{
											"key": "ids",
											"value": "4QK3YJ6hzJdhJHE9q7kbVV%2C02uPe16VFxPaiueQsPEDkE%2C36pk438TUUMdX59j1zbvTu",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SEARCH / BROWSE",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Search for Item",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {   \r",
											"        \"Welcome\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"albums\": {\r",
											"                    \"$ref\": \"#/definitions/Albums\"\r",
											"                },\r",
											"                \"artists\": {\r",
											"                    \"href\": \"#/definitions/Artists\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"albums\",\r",
											"                \"artists\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        },\r",
											"        \"Albums\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/AlbumsItem\"\r",
											"                    }\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"offset\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"previous\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"offset\",\r",
											"                \"previous\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Albums\"\r",
											"        },\r",
											"        \"AlbumsItem\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"album_type\": {\r",
											"                    \"$ref\": \"#/definitions/AlbumTypeEnum\"\r",
											"                },\r",
											"                \"artists\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"href\": \"#/definitions/Artist\"\r",
											"                    }\r",
											"                },\r",
											"                \"available_markets\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"release_date\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date\"\r",
											"                },\r",
											"                \"release_date_precision\": {\r",
											"                    \"$ref\": \"#/definitions/ReleaseDatePrecision\"\r",
											"                },\r",
											"                \"total_tracks\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/AlbumTypeEnum\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"album_type\",\r",
											"                \"artists\",\r",
											"                \"available_markets\",\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"release_date\",\r",
											"                \"release_date_precision\",\r",
											"                \"total_tracks\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"AlbumsItem\"\r",
											"        },\r",
											"        \"Artist\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/ArtistType\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Artist\"\r",
											"        },\r",
											"        \"ExternalUrls\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"spotify\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"spotify\"\r",
											"            ],\r",
											"            \"title\": \"ExternalUrls\"\r",
											"        },\r",
											"        \"Image\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"height\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"url\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"width\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"height\",\r",
											"                \"url\",\r",
											"                \"width\"\r",
											"            ],\r",
											"            \"title\": \"Image\"\r",
											"        },\r",
											"        \"Artists\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/ArtistsItem\"\r",
											"                    }\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"offset\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"previous\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"offset\",\r",
											"                \"previous\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Artists\"\r",
											"        },\r",
											"        \"ArtistsItem\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                    \"$ref\": \"#/definitions/Followers\"\r",
											"                },\r",
											"                \"genres\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"popularity\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/ArtistType\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"external_urls\",\r",
											"                \"followers\",\r",
											"                \"genres\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"popularity\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"ArtistsItem\"\r",
											"        },\r",
											"        \"Followers\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Followers\"\r",
											"        },\r",
											"        \"AlbumTypeEnum\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"single\",\r",
											"                \"album\"\r",
											"            ],\r",
											"            \"title\": \"AlbumTypeEnum\"\r",
											"        },\r",
											"        \"ArtistType\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"artist\"\r",
											"            ],\r",
											"            \"title\": \"ArtistType\"\r",
											"        },\r",
											"        \"ReleaseDatePrecision\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"day\"\r",
											"            ],\r",
											"            \"title\": \"ReleaseDatePrecision\"\r",
											"        }\r",
											"    \r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AValotihkuu&type=album%2Cartist&limit=30",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AValotihkuu"
										},
										{
											"key": "type",
											"value": "album%2Cartist"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Featured Playlists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"    \"definitions\": {\r",
											"        \"Welcome\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"message\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"playlists\": {\r",
											"                    \"$ref\": \"#/definitions/Playlists\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"message\",\r",
											"                \"playlists\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        },\r",
											"        \"Playlists\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Item\"\r",
											"                    }\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"offset\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"previous\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"offset\",\r",
											"                \"previous\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Playlists\"\r",
											"        },\r",
											"        \"Item\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"collaborative\": {\r",
											"                    \"type\": \"boolean\"\r",
											"                },\r",
											"                \"description\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"owner\": {\r",
											"                    \"$ref\": \"#/definitions/Owner\"\r",
											"                },\r",
											"                \"primary_color\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"public\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"snapshot_id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"tracks\": {\r",
											"                    \"$ref\": \"#/definitions/Tracks\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/ItemType\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"collaborative\",\r",
											"                \"description\",\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"owner\",\r",
											"                \"primary_color\",\r",
											"                \"public\",\r",
											"                \"snapshot_id\",\r",
											"                \"tracks\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Item\"\r",
											"        },\r",
											"        \"ExternalUrls\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"spotify\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"spotify\"\r",
											"            ],\r",
											"            \"title\": \"ExternalUrls\"\r",
											"        },\r",
											"        \"Image\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"height\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"url\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"width\": {\r",
											"                    \"type\": \"null\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"height\",\r",
											"                \"url\",\r",
											"                \"width\"\r",
											"            ],\r",
											"            \"title\": \"Image\"\r",
											"        },\r",
											"        \"Owner\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"display_name\": {\r",
											"                    \"$ref\": \"#/definitions/DisplayName\"\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"$ref\": \"#/definitions/ID\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/OwnerType\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"$ref\": \"#/definitions/URI\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"display_name\",\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Owner\"\r",
											"        },\r",
											"        \"Tracks\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Tracks\"\r",
											"        },\r",
											"        \"DisplayName\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"Spotify\"\r",
											"            ],\r",
											"            \"title\": \"DisplayName\"\r",
											"        },\r",
											"        \"ID\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"spotify\"\r",
											"            ],\r",
											"            \"title\": \"ID\"\r",
											"        },\r",
											"        \"OwnerType\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"user\"\r",
											"            ],\r",
											"            \"title\": \"OwnerType\"\r",
											"        },\r",
											"        \"URI\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"spotify:user:spotify\"\r",
											"            ],\r",
											"            \"title\": \"URI\"\r",
											"        },\r",
											"        \"ItemType\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"playlist\"\r",
											"            ],\r",
											"            \"title\": \"ItemType\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDSTRcuyde3IRjarMJt3bjcXBIBEoAMiiG4i0m9jI5bbiI87LHwgJpDrbP2fLVV8x2_r2ny9gPr8Zaw1kXbkvWx83uOFPgf90Nj-XaUl-411mlUrqCGViQWRCTQqAPaILhlDrYLv0EPMufCGVsVHJaCehbajGFiiEFYeFagdQ3PLkTHAgBJSMgXUVh0-qOJuZlGCHP-Bh_2WNvMK4eKYkjNzr1Z9KI14IdZZU81nt0SHhbXHYXgHzJzUpeufISFVb-ofpjqGu3IaaGyGoxSIPOkhZwCvdRv4HQiaOGp2663y1DVKcHlaVqxCb-9uqF4"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/featured-playlists?country=US&locale=en_EN&timestamp=2022-07-21T09%3A00%3A00&limit=10&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"featured-playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "US"
										},
										{
											"key": "locale",
											"value": "en_EN"
										},
										{
											"key": "timestamp",
											"value": "2022-07-21T09%3A00%3A00"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get New Releases",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"    \"definitions\": {\r",
											"        \"Welcome\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"albums\": {\r",
											"                    \"$ref\": \"#/definitions/Albums\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"albums\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        },\r",
											"        \"Albums\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Item\"\r",
											"                    }\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"offset\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"previous\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"offset\",\r",
											"                \"previous\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Albums\"\r",
											"        },\r",
											"        \"Item\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"album_type\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"artists\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Artist\"\r",
											"                    }\r",
											"                },\r",
											"                \"available_markets\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"release_date\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date\"\r",
											"                },\r",
											"                \"release_date_precision\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"total_tracks\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"album_type\",\r",
											"                \"artists\",\r",
											"                \"available_markets\",\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"release_date\",\r",
											"                \"release_date_precision\",\r",
											"                \"total_tracks\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Item\"\r",
											"        },\r",
											"        \"Artist\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Artist\"\r",
											"        },\r",
											"        \"ExternalUrls\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"spotify\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"spotify\"\r",
											"            ],\r",
											"            \"title\": \"ExternalUrls\"\r",
											"        },\r",
											"        \"Image\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"height\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"url\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"width\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"height\",\r",
											"                \"url\",\r",
											"                \"width\"\r",
											"            ],\r",
											"            \"title\": \"Image\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDSTRcuyde3IRjarMJt3bjcXBIBEoAMiiG4i0m9jI5bbiI87LHwgJpDrbP2fLVV8x2_r2ny9gPr8Zaw1kXbkvWx83uOFPgf90Nj-XaUl-411mlUrqCGViQWRCTQqAPaILhlDrYLv0EPMufCGVsVHJaCehbajGFiiEFYeFagdQ3PLkTHAgBJSMgXUVh0-qOJuZlGCHP-Bh_2WNvMK4eKYkjNzr1Z9KI14IdZZU81nt0SHhbXHYXgHzJzUpeufISFVb-ofpjqGu3IaaGyGoxSIPOkhZwCvdRv4HQiaOGp2663y1DVKcHlaVqxCb-9uqF4"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/new-releases?country=BY&limit=1&offset=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"new-releases"
									],
									"query": [
										{
											"key": "country",
											"value": "BY"
										},
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "offset",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get available genre seeds",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"genres\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"genres\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        }\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQD19aIq2zt0iK52XM-lRuItPXiVTr-fRN4vy4bgQlwV249gzhwBZOBs5l9nEwHgAMUQc6BQkp93e67DlrVQ12KrZGlFEx0TVXNY0BPCi3f0C4sPPoqPpe5Rr2A5ESxxvq5sxY76LdEooHW0sECWqXh03ce0ztVlbJWyVYGglsyhQxxPvKA_"
									}
								],
								"url": {
									"raw": "{{base_url}}/recommendations/available-genre-seeds",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"recommendations",
										"available-genre-seeds"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Recommendations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"seeds\": [\r",
											"    {\r",
											"      \"afterFilteringSize\": 0,\r",
											"      \"afterRelinkingSize\": 0,\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"initialPoolSize\": 0,\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  ],\r",
											"  \"tracks\": [\r",
											"    {\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"name\": \"string\",\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"available_markets\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"disc_number\": 0,\r",
											"      \"duration_ms\": 0,\r",
											"      \"explicit\": true,\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"is_playable\": true,\r",
											"      \"linked_from\": {\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"type\": \"string\",\r",
											"        \"uri\": \"string\"\r",
											"      },\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"string\"\r",
											"      },\r",
											"      \"name\": \"string\",\r",
											"      \"preview_url\": \"string\",\r",
											"      \"track_number\": 0,\r",
											"      \"type\": \"string\",\r",
											"      \"uri\": \"string\",\r",
											"      \"is_local\": true\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBJ2CSD-gcoJONM17tHZFnqPQPrgzgBQirkbyOkdJYh-tmi8CmQS_rEKe63uSly1E9SXyzhthN9MhSZZGPSW5Nj68EJpNFt97ZTp5k9jBUbe36FQJ2ztqyuBzxY3j9j7d8jRP6ytxeI4FsGzGpniC_NyaUMiN2CLM7dBeZNOaFlCEGax4ug"
									}
								],
								"url": {
									"raw": "{{base_url}}/recommendations?limit=10&market=US&seed_artists=05lIUgmmsmTX2N9dCKc8rC&seed_genres=idm%2Cambient&seed_tracks=0c6xIDDpzE81m2q797ordA",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"recommendations"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "market",
											"value": "US"
										},
										{
											"key": "seed_artists",
											"value": "05lIUgmmsmTX2N9dCKc8rC"
										},
										{
											"key": "seed_genres",
											"value": "idm%2Cambient"
										},
										{
											"key": "seed_tracks",
											"value": "0c6xIDDpzE81m2q797ordA"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Available Markets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"markets\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"markets\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        }\r",
											"\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQB3iAD2r7iI6rWQQ81GW-fh7lePakRcEBLNk1XlK5TfbY3JIdwZ2IdJKElhGQdymIR93hyaEI03XwSwG0KiA5jFSCZNOkqJul9JhMa6tUbr6rxzr_sjWxlRwixtUOTdEQSt8gClM7C-r8XbLbtvZR256TM7KBii88y9F9U6aIE_ydx4TubqwemxVkp68Mr7bVi4Jme-ASY4-3qVmdrpb_9fR9ZVtQqbaRxQsysvLVU3yKCix6bEIdLoUUyHHSueELh3E9x084kLP_AyScrJfd-oZvBqGdU5nkOcD4zXSUkYb7iHkQE61gW4KLxaqWU1"
									}
								],
								"url": {
									"raw": "{{base_url}}/markets",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"markets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category's playlists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"albums\": {\r",
											"    \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"    \"items\": [\r",
											"      {}\r",
											"    ],\r",
											"    \"limit\": 20,\r",
											"    \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"    \"offset\": 0,\r",
											"    \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"    \"total\": 4\r",
											"  },\r",
											"  \"message\": \"string\"\r",
											"}\r",
											"\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/categories/party/playlists?country=US&limit=15&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"categories",
										"party",
										"playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "15"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Search for Item with invalid quiery (randomUUID) (EXPECTED 400 BUT GOT 200)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {   \r",
											"        \"Welcome\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"albums\": {\r",
											"                    \"$ref\": \"#/definitions/Albums\"\r",
											"                },\r",
											"                \"artists\": {\r",
											"                    \"href\": \"#/definitions/Artists\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"albums\",\r",
											"                \"artists\"\r",
											"            ],\r",
											"            \"title\": \"Welcome\"\r",
											"        },\r",
											"        \"Albums\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/AlbumsItem\"\r",
											"                    }\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"offset\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"previous\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"offset\",\r",
											"                \"previous\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Albums\"\r",
											"        },\r",
											"        \"AlbumsItem\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"album_type\": {\r",
											"                    \"$ref\": \"#/definitions/AlbumTypeEnum\"\r",
											"                },\r",
											"                \"artists\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"href\": \"#/definitions/Artist\"\r",
											"                    }\r",
											"                },\r",
											"                \"available_markets\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"release_date\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date\"\r",
											"                },\r",
											"                \"release_date_precision\": {\r",
											"                    \"$ref\": \"#/definitions/ReleaseDatePrecision\"\r",
											"                },\r",
											"                \"total_tracks\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/AlbumTypeEnum\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"album_type\",\r",
											"                \"artists\",\r",
											"                \"available_markets\",\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"release_date\",\r",
											"                \"release_date_precision\",\r",
											"                \"total_tracks\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"AlbumsItem\"\r",
											"        },\r",
											"        \"Artist\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/ArtistType\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"external_urls\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"name\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"Artist\"\r",
											"        },\r",
											"        \"ExternalUrls\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"spotify\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"spotify\"\r",
											"            ],\r",
											"            \"title\": \"ExternalUrls\"\r",
											"        },\r",
											"        \"Image\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"height\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"url\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"width\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"height\",\r",
											"                \"url\",\r",
											"                \"width\"\r",
											"            ],\r",
											"            \"title\": \"Image\"\r",
											"        },\r",
											"        \"Artists\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"items\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/ArtistsItem\"\r",
											"                    }\r",
											"                },\r",
											"                \"limit\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"next\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"offset\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"previous\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"items\",\r",
											"                \"limit\",\r",
											"                \"next\",\r",
											"                \"offset\",\r",
											"                \"previous\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Artists\"\r",
											"        },\r",
											"        \"ArtistsItem\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"external_urls\": {\r",
											"                    \"$ref\": \"#/definitions/ExternalUrls\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                    \"$ref\": \"#/definitions/Followers\"\r",
											"                },\r",
											"                \"genres\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"type\": \"string\"\r",
											"                    }\r",
											"                },\r",
											"                \"href\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"id\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"images\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Image\"\r",
											"                    }\r",
											"                },\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"popularity\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"type\": {\r",
											"                    \"$ref\": \"#/definitions/ArtistType\"\r",
											"                },\r",
											"                \"uri\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"external_urls\",\r",
											"                \"followers\",\r",
											"                \"genres\",\r",
											"                \"href\",\r",
											"                \"id\",\r",
											"                \"images\",\r",
											"                \"name\",\r",
											"                \"popularity\",\r",
											"                \"type\",\r",
											"                \"uri\"\r",
											"            ],\r",
											"            \"title\": \"ArtistsItem\"\r",
											"        },\r",
											"        \"Followers\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"href\": {\r",
											"                    \"type\": \"null\"\r",
											"                },\r",
											"                \"total\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"href\",\r",
											"                \"total\"\r",
											"            ],\r",
											"            \"title\": \"Followers\"\r",
											"        },\r",
											"        \"AlbumTypeEnum\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"single\",\r",
											"                \"album\"\r",
											"            ],\r",
											"            \"title\": \"AlbumTypeEnum\"\r",
											"        },\r",
											"        \"ArtistType\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"artist\"\r",
											"            ],\r",
											"            \"title\": \"ArtistType\"\r",
											"        },\r",
											"        \"ReleaseDatePrecision\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"day\"\r",
											"            ],\r",
											"            \"title\": \"ReleaseDatePrecision\"\r",
											"        }\r",
											"    \r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q={{$randomUUID}}&type=album%2Cartist&limit=30",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "{{$randomUUID}}"
										},
										{
											"key": "type",
											"value": "album%2Cartist"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for Item without a required quiery (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, No search query\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?type=album%2Cartist&limit=30",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "type",
											"value": "album%2Cartist"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for Item without required type (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Missing parameter type\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AValotihkuu&limit=30",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AValotihkuu"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for Item witn unallowed type (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Bad search type field genre\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AValotihkuu&type=genre&limit=30",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AValotihkuu"
										},
										{
											"key": "type",
											"value": "genre"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for Item less than a limit (400 Bad request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Bad limit, limit must be larger than 0\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AValotihkuu&type=album%2Cartist&limit=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AValotihkuu"
										},
										{
											"key": "type",
											"value": "album%2Cartist"
										},
										{
											"key": "limit",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for Item exceeding the limit (400 Bad request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error,Invalid limit\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AValotihkuu&type=album%2Cartist&limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AValotihkuu"
										},
										{
											"key": "type",
											"value": "album%2Cartist"
										},
										{
											"key": "limit",
											"value": "51",
											"description": "50 - maximum"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for Item exceeding the offset (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(404)){\r",
											"    pm.test(\"Response is showing error, Not found\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(404)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AValotihkuu&type=album%2Cartist&limit=30&offset=1001",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AValotihkuu"
										},
										{
											"key": "type",
											"value": "album%2Cartist"
										},
										{
											"key": "limit",
											"value": "30"
										},
										{
											"key": "offset",
											"value": "1001"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Featured Playlists with unexist country code (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, invalid country code\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"let schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDSTRcuyde3IRjarMJt3bjcXBIBEoAMiiG4i0m9jI5bbiI87LHwgJpDrbP2fLVV8x2_r2ny9gPr8Zaw1kXbkvWx83uOFPgf90Nj-XaUl-411mlUrqCGViQWRCTQqAPaILhlDrYLv0EPMufCGVsVHJaCehbajGFiiEFYeFagdQ3PLkTHAgBJSMgXUVh0-qOJuZlGCHP-Bh_2WNvMK4eKYkjNzr1Z9KI14IdZZU81nt0SHhbXHYXgHzJzUpeufISFVb-ofpjqGu3IaaGyGoxSIPOkhZwCvdRv4HQiaOGp2663y1DVKcHlaVqxCb-9uqF4"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/featured-playlists?country=UU&locale=en_EN&timestamp=2022-07-21T09%3A00%3A00&limit=10&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"featured-playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "UU"
										},
										{
											"key": "locale",
											"value": "en_EN"
										},
										{
											"key": "timestamp",
											"value": "2022-07-21T09%3A00%3A00"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Featured Playlists with unexist language code (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Locale parameter is ill\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"let schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDSTRcuyde3IRjarMJt3bjcXBIBEoAMiiG4i0m9jI5bbiI87LHwgJpDrbP2fLVV8x2_r2ny9gPr8Zaw1kXbkvWx83uOFPgf90Nj-XaUl-411mlUrqCGViQWRCTQqAPaILhlDrYLv0EPMufCGVsVHJaCehbajGFiiEFYeFagdQ3PLkTHAgBJSMgXUVh0-qOJuZlGCHP-Bh_2WNvMK4eKYkjNzr1Z9KI14IdZZU81nt0SHhbXHYXgHzJzUpeufISFVb-ofpjqGu3IaaGyGoxSIPOkhZwCvdRv4HQiaOGp2663y1DVKcHlaVqxCb-9uqF4"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/featured-playlists?country=UA&locale=89_de&timestamp=2022-07-21T09%3A00%3A00&limit=10&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"featured-playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "UA"
										},
										{
											"key": "locale",
											"value": "89_de"
										},
										{
											"key": "timestamp",
											"value": "2022-07-21T09%3A00%3A00"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Featured Playlists with invalid timestamp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 BUT EXPECTED 400\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"let schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDSTRcuyde3IRjarMJt3bjcXBIBEoAMiiG4i0m9jI5bbiI87LHwgJpDrbP2fLVV8x2_r2ny9gPr8Zaw1kXbkvWx83uOFPgf90Nj-XaUl-411mlUrqCGViQWRCTQqAPaILhlDrYLv0EPMufCGVsVHJaCehbajGFiiEFYeFagdQ3PLkTHAgBJSMgXUVh0-qOJuZlGCHP-Bh_2WNvMK4eKYkjNzr1Z9KI14IdZZU81nt0SHhbXHYXgHzJzUpeufISFVb-ofpjqGu3IaaGyGoxSIPOkhZwCvdRv4HQiaOGp2663y1DVKcHlaVqxCb-9uqF4"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/featured-playlists?country=US&locale=en_EN&timestamp=1564-07-21T09%3A00%3A00&limit=10&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"featured-playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "US"
										},
										{
											"key": "locale",
											"value": "en_EN"
										},
										{
											"key": "timestamp",
											"value": "1564-07-21T09%3A00%3A00"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Featured Playlists exceeding the limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error,Invalid limit\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDSTRcuyde3IRjarMJt3bjcXBIBEoAMiiG4i0m9jI5bbiI87LHwgJpDrbP2fLVV8x2_r2ny9gPr8Zaw1kXbkvWx83uOFPgf90Nj-XaUl-411mlUrqCGViQWRCTQqAPaILhlDrYLv0EPMufCGVsVHJaCehbajGFiiEFYeFagdQ3PLkTHAgBJSMgXUVh0-qOJuZlGCHP-Bh_2WNvMK4eKYkjNzr1Z9KI14IdZZU81nt0SHhbXHYXgHzJzUpeufISFVb-ofpjqGu3IaaGyGoxSIPOkhZwCvdRv4HQiaOGp2663y1DVKcHlaVqxCb-9uqF4"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/featured-playlists?country=US&locale=en_EN&timestamp=2022-07-21T09%3A00%3A00&limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"featured-playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "US"
										},
										{
											"key": "locale",
											"value": "en_EN"
										},
										{
											"key": "timestamp",
											"value": "2022-07-21T09%3A00%3A00"
										},
										{
											"key": "limit",
											"value": "51",
											"description": "50 - maximum"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Recommendations without required params (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, invalid request\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"let schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBJ2CSD-gcoJONM17tHZFnqPQPrgzgBQirkbyOkdJYh-tmi8CmQS_rEKe63uSly1E9SXyzhthN9MhSZZGPSW5Nj68EJpNFt97ZTp5k9jBUbe36FQJ2ztqyuBzxY3j9j7d8jRP6ytxeI4FsGzGpniC_NyaUMiN2CLM7dBeZNOaFlCEGax4ug"
									}
								],
								"url": {
									"raw": "{{base_url}}/recommendations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"recommendations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Recommendations exceeding the seed value (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error, Bad limit, limit must be larger than 0\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBJ2CSD-gcoJONM17tHZFnqPQPrgzgBQirkbyOkdJYh-tmi8CmQS_rEKe63uSly1E9SXyzhthN9MhSZZGPSW5Nj68EJpNFt97ZTp5k9jBUbe36FQJ2ztqyuBzxY3j9j7d8jRP6ytxeI4FsGzGpniC_NyaUMiN2CLM7dBeZNOaFlCEGax4ug"
									}
								],
								"url": {
									"raw": "{{base_url}}/recommendations?seed_artists=05lIUgmmsmTX2N9dCKc8rC%6OqhFYFJDnBBHas02HopPT%1qiozoFwAIOtzKj8wz4mzS%6zrYVEFX8UvqKu99mWVOKs%1LcsFT5fwJajcpAqmlitHX",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"recommendations"
									],
									"query": [
										{
											"key": "limit",
											"value": "30",
											"disabled": true
										},
										{
											"key": "market",
											"value": "US",
											"disabled": true
										},
										{
											"key": "seed_artists",
											"value": "05lIUgmmsmTX2N9dCKc8rC%6OqhFYFJDnBBHas02HopPT%1qiozoFwAIOtzKj8wz4mzS%6zrYVEFX8UvqKu99mWVOKs%1LcsFT5fwJajcpAqmlitHX"
										},
										{
											"key": "seed_genres",
											"value": "idm%2Cambient",
											"disabled": true
										},
										{
											"key": "seed_tracks",
											"value": "0c6xIDDpzE81m2q797ordA",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category's playlists with unallowed category id (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(404)){\r",
											"    pm.test(\"Response is showing error, Specified id doesn't exist\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(404)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/categories/{{$randomTransactionType}}/playlists?country=US&limit=15&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"categories",
										"{{$randomTransactionType}}",
										"playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "15"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category's playlists  exceeding the limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(400)){\r",
											"    pm.test(\"Response is showing error,Invalid limit\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 400 Bad Request\", function(){\r",
											"        pm.response.to.have.status(400)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/browse/categories/party/playlists?country=US&limit=51&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"browse",
										"categories",
										"party",
										"playlists"
									],
									"query": [
										{
											"key": "country",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "51"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "MY LIBRARY",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get my saved tracks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAS5mljvfzRg97z2uQtCK2jZHeEs2Ib_Q8w-vs0XR66HuJPBKFERvXyQ5Cs8pcLNPhmvyV5CAdOQTQ37bkFyRy5akx2KEIkKoS_OZbBgYvGZQ_ybKRmJR5e-hhi0M2SNcWIStPna_TmYopDp3xaXFMdiJQ2DYv-tPVtFXbq58Z7tPoPyG_jvyQHLmjONZ20Gg"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/tracks?market=US&limit=10&offset=5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Tracks for Current User",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDwsaxjyBDMSaoh0uBFv-aCqaE55NtRK9oKzeV6e02RbzPmKOHWbRzDPwEux55nTaLlMz9ZaXo_sYGufiHQsdezuK83pcKEYBWUJSqtFVxYU2lM2MWSepcIcqiUBpL0_s5jmll_bzqucg9k9GKBD7kBadw6Xz8E08mjZVhdkoaNMbL3lPkK7fRIaM18AHuzDw"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete saved tracks from the library",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDwsaxjyBDMSaoh0uBFv-aCqaE55NtRK9oKzeV6e02RbzPmKOHWbRzDPwEux55nTaLlMz9ZaXo_sYGufiHQsdezuK83pcKEYBWUJSqtFVxYU2lM2MWSepcIcqiUBpL0_s5jmll_bzqucg9k9GKBD7kBadw6Xz8E08mjZVhdkoaNMbL3lPkK7fRIaM18AHuzDw"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User's Saved Episodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQD1wL5tm2Q1qIUNWJINz7o8uTU97D2lsp8vr7upgWpgCUxlQ2YFOVrnu8boAPPJvCHILWheNSbJrdRH1jnvJvR3WqkDf0npn2xnk1xFb_4dESoD5BdtasGqBHYm1d2Ce0U9fDnD9WhY7-3u3Cl6KC0ZS1XBWG5ufrsNzmSupXyPX1Qt5yCN6I4mmYfFKMyb80Weh35WXqK9OmTKYqLHxZWPxKJ2v9jsU7wEPoLyR9YHvWv3ayUxJiT6Se7oYFRY2wa51N2aPmJ3HMqD4Iu-_bsCT0SYE0Q7dqU6hzKx42aiY7XNkdLEuG9ueFtPxGFK"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/episodes?market=US&limit=10&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"episodes"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Episodes for User",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBZLaovTH_eJ8nPXiYCPNeU6zlMWuUQtEls_nSdv3Jp0ykLDkuNHEc-z2N7TR1ioVgEin_0IV7l_LSO5DYa3E9iavHLM0tmLS8b8l7z62vL9lvYDYgMm4Gho98wX1Mljg3YIXifKYVGDBFOS5GVsQtUrSqWfvFbu-wmuBQB6FmteSmEVwBCwPOKLT8e4_UgCQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"6zf6Tm8Pl4lQlnQjNnRzG0\",\"2C7HrnC0URRyrAc6JoSrpuqI\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/episodes?ids=6zf6Tm8Pl4lQlnQjNnRzG0%2C7HrnC0URRyrAc6JoSrpuqI",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"episodes"
									],
									"query": [
										{
											"key": "ids",
											"value": "6zf6Tm8Pl4lQlnQjNnRzG0%2C7HrnC0URRyrAc6JoSrpuqI"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove User's Saved Episodes",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBZLaovTH_eJ8nPXiYCPNeU6zlMWuUQtEls_nSdv3Jp0ykLDkuNHEc-z2N7TR1ioVgEin_0IV7l_LSO5DYa3E9iavHLM0tmLS8b8l7z62vL9lvYDYgMm4Gho98wX1Mljg3YIXifKYVGDBFOS5GVsQtUrSqWfvFbu-wmuBQB6FmteSmEVwBCwPOKLT8e4_UgCQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"6zf6Tm8Pl4lQlnQjNnRzG0\",\"2C7HrnC0URRyrAc6JoSrpuqI\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/episodes?ids=6zf6Tm8Pl4lQlnQjNnRzG0%2C7HrnC0URRyrAc6JoSrpuqI",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"episodes"
									],
									"query": [
										{
											"key": "ids",
											"value": "6zf6Tm8Pl4lQlnQjNnRzG0%2C7HrnC0URRyrAc6JoSrpuqI"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Saved Albums",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQC9vOaUVMQHWPXdcNEG2c-07WjJ166CRVzcRjuhIdV4tF6ZOSJ1fg3NFGkM713J0J-TZhhI3p8ySx5mD_5YdnXsing2mp4n1jmtFvoZkqPYkgpRzS1DMEnH8eiSpo4DX6ic19LoHJlOV8fwiWf6foSMIyP0tikL5Hy1mUR68yPZF14ubun-QpAL5hVtn0OhPA"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/albums?limit=10&offset=2&market=US",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"albums"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "2"
										},
										{
											"key": "market",
											"value": "US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Albums",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDERX8_yPXzog2LeGJW-ZFp4gIdgQSwIclOvVNRe4CxKYsgkxnhw2arqKs0cn8ofsacDszGw1aOjd9igYhvR2jlD8vqpw7shEy_hm43kzV4-Fw_2lAcOQac11H8NPK-ZcMZPFv5ZHMhDTy5JtH3YHQDB17E0QJtToki_BjCwcQJ2m66g00nMEI2zomu_pWHgKVOU06WdE2HiIt28hg8Rt7ud6Vck4wjjWSkY9zCMyrhyFFtTG5X8HOzZZ7o3_kManMucxYFZOBiekpDNKAsqWVdqJlsQlZ5T82dXaIt1ySVIlfHtQiD61xz3CH4DYjD"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"382ObEPsp2rxGrnsizN5TX\",\"1A2GTWGtFfWp7KSQTwWOyo\",\"2noRn2Aes5aoNVsU6iWThc\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/albums",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"albums"
									],
									"query": [
										{
											"key": "ids",
											"value": "382ObEPsp2rxGrnsizN5TX%2C1A2GTWGtFfWp7KSQTwWOyo%2C2noRn2Aes5aoNVsU6iWThc",
											"description": "max - 20",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Albums",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDERX8_yPXzog2LeGJW-ZFp4gIdgQSwIclOvVNRe4CxKYsgkxnhw2arqKs0cn8ofsacDszGw1aOjd9igYhvR2jlD8vqpw7shEy_hm43kzV4-Fw_2lAcOQac11H8NPK-ZcMZPFv5ZHMhDTy5JtH3YHQDB17E0QJtToki_BjCwcQJ2m66g00nMEI2zomu_pWHgKVOU06WdE2HiIt28hg8Rt7ud6Vck4wjjWSkY9zCMyrhyFFtTG5X8HOzZZ7o3_kManMucxYFZOBiekpDNKAsqWVdqJlsQlZ5T82dXaIt1ySVIlfHtQiD61xz3CH4DYjD"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"382ObEPsp2rxGrnsizN5TX\",\"1A2GTWGtFfWp7KSQTwWOyo\",\"2noRn2Aes5aoNVsU6iWThc\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/albums",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"albums"
									],
									"query": [
										{
											"key": "ids",
											"value": "382ObEPsp2rxGrnsizN5TX%2C1A2GTWGtFfWp7KSQTwWOyo%2C2noRn2Aes5aoNVsU6iWThc",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User's Top items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQCQPcBJL1REFsdmqoGvlPCUkQUJij4e38Bi43gctZ7xPxnuoMtxbheSY4lrrZZ4H6jciWrSKzv8X_8U3o6CVh3kiPeTOl_a2sCFQ4niHExrh-JA8igsHvjHsd5fTmUl45LDHZc8A0Mne0K2AlKgicXsD1R6l1sHVydiIdMc0fGVknoFujbkQn9GmZil"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/top/tracks?time_range=short_term&limit=10&offset=6",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"top",
										"tracks"
									],
									"query": [
										{
											"key": "time_range",
											"value": "short_term"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my saved Playlists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"let schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQB_COz9KL1wQZX9NSBbOvf1cEELDpAA25rd59wFmU1kdouxpR0I0XrAvJRYJ9YPUztlp042QnQyTnTQM1GVww24Nj0VHCIyjMXta-YrchCPzARWBHHWyZLjeMTtlBlXR60ezxUulSMj2YkHEITmZizNgoMwyRU-Uzp3yAmaeOGAzpNNZQ56Xh2J8BBI3crG7qMl7Sa2w_6YztWef3qs2rDgnvLag_4mLbrGVEUuXttkqOJu_MIbZNLfcEVF5b03JZa1RCRX8RG5qCZvDbKun9qnEX_UQMjdh_--C2uabtSPtL1C8_fVTCGSqRukLNQp"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/playlists?limit=20&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Get a List of Current User's Playlists, (exceeding the limit)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid limit\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/me/playlists?limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": "51",
											"description": "Max - 50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a List of Current User's Playlists, (exceeding the offset)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/me/playlists?offset=100.001",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"playlists"
									],
									"query": [
										{
											"key": "offset",
											"value": "100.001",
											"description": "Max - 100000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my saved tracks less than a limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Bad limit, limit must be larger than 0\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAS5mljvfzRg97z2uQtCK2jZHeEs2Ib_Q8w-vs0XR66HuJPBKFERvXyQ5Cs8pcLNPhmvyV5CAdOQTQ37bkFyRy5akx2KEIkKoS_OZbBgYvGZQ_ybKRmJR5e-hhi0M2SNcWIStPna_TmYopDp3xaXFMdiJQ2DYv-tPVtFXbq58Z7tPoPyG_jvyQHLmjONZ20Gg"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/tracks?market=US&limit=0&offset=5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "0",
											"description": "1 - min"
										},
										{
											"key": "offset",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Tracks for Current User exceeding the limit of ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Max 50 IDs at once\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDwsaxjyBDMSaoh0uBFv-aCqaE55NtRK9oKzeV6e02RbzPmKOHWbRzDPwEux55nTaLlMz9ZaXo_sYGufiHQsdezuK83pcKEYBWUJSqtFVxYU2lM2MWSepcIcqiUBpL0_s5jmll_bzqucg9k9GKBD7kBadw6Xz8E08mjZVhdkoaNMbL3lPkK7fRIaM18AHuzDw"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"30LI2JKKGXPYhgENg6R5Yh\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\",\"4zpv87StJeDtgmtTtQwMTs\",\"0YmlTGDEwlEYbpdsoZai57\",\"7EVHkplyJrr83GmpODNWbi\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Episodes with unallowed ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Bad ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBZLaovTH_eJ8nPXiYCPNeU6zlMWuUQtEls_nSdv3Jp0ykLDkuNHEc-z2N7TR1ioVgEin_0IV7l_LSO5DYa3E9iavHLM0tmLS8b8l7z62vL9lvYDYgMm4Gho98wX1Mljg3YIXifKYVGDBFOS5GVsQtUrSqWfvFbu-wmuBQB6FmteSmEVwBCwPOKLT8e4_UgCQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"6zf6Tm8Pl4lQlnQjNnRzG0\",\"2C7HrnC0URRyrAc6JoSrpuqI\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/episodes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Episodes for User less than a limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Missing payload\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQBZLaovTH_eJ8nPXiYCPNeU6zlMWuUQtEls_nSdv3Jp0ykLDkuNHEc-z2N7TR1ioVgEin_0IV7l_LSO5DYa3E9iavHLM0tmLS8b8l7z62vL9lvYDYgMm4Gho98wX1Mljg3YIXifKYVGDBFOS5GVsQtUrSqWfvFbu-wmuBQB6FmteSmEVwBCwPOKLT8e4_UgCQ"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[]}"
								},
								"url": {
									"raw": "{{base_url}}/me/episodes?ids=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"episodes"
									],
									"query": [
										{
											"key": "ids",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Saved Albums exceeding the limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid limit\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQC9vOaUVMQHWPXdcNEG2c-07WjJ166CRVzcRjuhIdV4tF6ZOSJ1fg3NFGkM713J0J-TZhhI3p8ySx5mD_5YdnXsing2mp4n1jmtFvoZkqPYkgpRzS1DMEnH8eiSpo4DX6ic19LoHJlOV8fwiWf6foSMIyP0tikL5Hy1mUR68yPZF14ubun-QpAL5hVtn0OhPA"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/albums?limit=51&offset=2&market=US",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"albums"
									],
									"query": [
										{
											"key": "limit",
											"value": "51"
										},
										{
											"key": "offset",
											"value": "2"
										},
										{
											"key": "market",
											"value": "US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Save Albums exceeding the limit of ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Bad ID\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDERX8_yPXzog2LeGJW-ZFp4gIdgQSwIclOvVNRe4CxKYsgkxnhw2arqKs0cn8ofsacDszGw1aOjd9igYhvR2jlD8vqpw7shEy_hm43kzV4-Fw_2lAcOQac11H8NPK-ZcMZPFv5ZHMhDTy5JtH3YHQDB17E0QJtToki_BjCwcQJ2m66g00nMEI2zomu_pWHgKVOU06WdE2HiIt28hg8Rt7ud6Vck4wjjWSkY9zCMyrhyFFtTG5X8HOzZZ7o3_kManMucxYFZOBiekpDNKAsqWVdqJlsQlZ5T82dXaIt1ySVIlfHtQiD61xz3CH4DYjD"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"ids\":[\"5kU780ntZsCfCMhEn1DLQE\",\"1Urrycrm9pFy2F3xSoQ3fj\",\"2jp10nhpPcZkuUaFougyN3\",\"4UMfUfwA3LmIav2nJq7cBY\",\"0DFbQjp468sMiIMTrZdr5w\",\"7FUIQIDxNu0F8iH98irz7N\",\"7Ju51RSqybe8bdxbzUqY97\",\"2JITZxH1kxJkXtp4xUmgVF\",\"4Gxql1kKRbHfHZnqrBGuAz2\",\"3N4fmmPCO3Vh6QTKCiDyob\",\"4Qlt9lQidbI8GC2Kvuy4ZF\",\"0ITykxrmzKV6wJ8wsiybJn\",\"3iRimtEPIXz546GBx63UjC\",\"4rgo2M2vbIFqVDCnlL6AMY\",\"7baUsg73GrsSwnK4iqQJk7\",\"3VlZzZzYPy7nsXwGxlHPlu\",\"69mR7YiwQTw7nvlFKBOp7Y\",\"29PcwiQUhb8K9rJDNhTAvz\",\"5R5QsAlwBdOEgYmiz7GIcE\",\"04ccGfrNTBKXQKyPHjoWTV\",\"0V91xiAtoMqAduPnQQ9YtL\",\"0DFbQjp468sMiIMTrZdr5w\",\"7FUIQIDxNu0F8iH98irz7N\",\"7Ju51RSqybe8bdxbzUqY97\",\"2JITZxH1kxJkXtp4xUmgVF\"]}"
								},
								"url": {
									"raw": "{{base_url}}/me/albums",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"albums"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User's Top items with unallowed type (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQCQPcBJL1REFsdmqoGvlPCUkQUJij4e38Bi43gctZ7xPxnuoMtxbheSY4lrrZZ4H6jciWrSKzv8X_8U3o6CVh3kiPeTOl_a2sCFQ4niHExrh-JA8igsHvjHsd5fTmUl45LDHZc8A0Mne0K2AlKgicXsD1R6l1sHVydiIdMc0fGVknoFujbkQn9GmZil"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/top/track",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"top",
										"track"
									],
									"query": [
										{
											"key": "time_range",
											"value": "short_term",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "6",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User's Top items with invalid time_range (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQCQPcBJL1REFsdmqoGvlPCUkQUJij4e38Bi43gctZ7xPxnuoMtxbheSY4lrrZZ4H6jciWrSKzv8X_8U3o6CVh3kiPeTOl_a2sCFQ4niHExrh-JA8igsHvjHsd5fTmUl45LDHZc8A0Mne0K2AlKgicXsD1R6l1sHVydiIdMc0fGVknoFujbkQn9GmZil"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/top/tracks?time_range=big_term",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"top",
										"tracks"
									],
									"query": [
										{
											"key": "time_range",
											"value": "big_term"
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "6",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my saved Playlists exceeding the limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid limit\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQB_COz9KL1wQZX9NSBbOvf1cEELDpAA25rd59wFmU1kdouxpR0I0XrAvJRYJ9YPUztlp042QnQyTnTQM1GVww24Nj0VHCIyjMXta-YrchCPzARWBHHWyZLjeMTtlBlXR60ezxUulSMj2YkHEITmZizNgoMwyRU-Uzp3yAmaeOGAzpNNZQ56Xh2J8BBI3crG7qMl7Sa2w_6YztWef3qs2rDgnvLag_4mLbrGVEUuXttkqOJu_MIbZNLfcEVF5b03JZa1RCRX8RG5qCZvDbKun9qnEX_UQMjdh_--C2uabtSPtL1C8_fVTCGSqRukLNQp"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/playlists?limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": "51",
											"description": "50 - max"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my saved Playlists with invalid offset (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid offset\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQB_COz9KL1wQZX9NSBbOvf1cEELDpAA25rd59wFmU1kdouxpR0I0XrAvJRYJ9YPUztlp042QnQyTnTQM1GVww24Nj0VHCIyjMXta-YrchCPzARWBHHWyZLjeMTtlBlXR60ezxUulSMj2YkHEITmZizNgoMwyRU-Uzp3yAmaeOGAzpNNZQ56Xh2J8BBI3crG7qMl7Sa2w_6YztWef3qs2rDgnvLag_4mLbrGVEUuXttkqOJu_MIbZNLfcEVF5b03JZa1RCRX8RG5qCZvDbKun9qnEX_UQMjdh_--C2uabtSPtL1C8_fVTCGSqRukLNQp"
									}
								],
								"url": {
									"raw": "{{base_url}}/me/playlists?limit=50&offset=100.001",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"me",
										"playlists"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "50 - max"
										},
										{
											"key": "offset",
											"value": "100.001",
											"description": "100.000 - max"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "ARTISTS",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get Artist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"external_urls\": {\r",
											"    \"spotify\": \"string\"\r",
											"  },\r",
											"  \"followers\": {\r",
											"    \"href\": \"string\",\r",
											"    \"total\": 0\r",
											"  },\r",
											"  \"genres\": [\r",
											"    \"Prog rock\",\r",
											"    \"Grunge\"\r",
											"  ],\r",
											"  \"href\": \"string\",\r",
											"  \"id\": \"string\",\r",
											"  \"images\": [\r",
											"    {\r",
											"      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\",\r",
											"      \"height\": 300,\r",
											"      \"width\": 300\r",
											"    }\r",
											"  ],\r",
											"  \"name\": \"string\",\r",
											"  \"popularity\": 0,\r",
											"  \"type\": \"artist\",\r",
											"  \"uri\": \"string\"\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/1X93CiijNCFQa4o17hLwI3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"1X93CiijNCFQa4o17hLwI3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get several artists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"artists\": [\r",
											"    {\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"followers\": {\r",
											"        \"href\": \"string\",\r",
											"        \"total\": 0\r",
											"      },\r",
											"      \"genres\": [\r",
											"        \"Prog rock\",\r",
											"        \"Grunge\"\r",
											"      ],\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"type\": \"artist\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"//pm.test(\"Body contains requested ids\", function () {\r",
											"//    var jsonData = pm.response.json();\r",
											"//    pm.expect(jsonData.artists.id).to.eql('2CIMQHirSU0MQqyYHq0eOx','2C57dN52uHvrHOxijzpIgu3E',//'2C1vCWHaC5f2uS3yhpwWbIA6');\r",
											"//});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists?ids=2CIMQHirSU0MQqyYHq0eOx%2C57dN52uHvrHOxijzpIgu3E%2C1vCWHaC5f2uS3yhpwWbIA6",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists"
									],
									"query": [
										{
											"key": "ids",
											"value": "2CIMQHirSU0MQqyYHq0eOx%2C57dN52uHvrHOxijzpIgu3E%2C1vCWHaC5f2uS3yhpwWbIA6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Artist's Top Tracks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"tracks\": [\r",
											"    {\r",
											"      \"album\": {\r",
											"        \"album_type\": \"compilation\",\r",
											"        \"total_tracks\": 9,\r",
											"        \"available_markets\": [\r",
											"          \"CA\",\r",
											"          \"BR\",\r",
											"          \"IT\"\r",
											"        ],\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"name\": \"string\",\r",
											"        \"release_date\": \"1981-12\",\r",
											"        \"release_date_precision\": \"year\",\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"market\"\r",
											"        },\r",
											"        \"type\": \"album\",\r",
											"        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"album_group\": \"compilation\",\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"name\": \"string\",\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ]\r",
											"      },\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"followers\": {\r",
											"            \"href\": \"string\",\r",
											"            \"total\": 0\r",
											"          },\r",
											"          \"genres\": [\r",
											"            \"Prog rock\",\r",
											"            \"Grunge\"\r",
											"          ],\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"available_markets\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"disc_number\": 0,\r",
											"      \"duration_ms\": 0,\r",
											"      \"explicit\": true,\r",
											"      \"external_ids\": {\r",
											"        \"isrc\": \"string\",\r",
											"        \"ean\": \"string\",\r",
											"        \"upc\": \"string\"\r",
											"      },\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"is_playable\": true,\r",
											"      \"linked_from\": {\r",
											"        \"album\": {\r",
											"          \"album_type\": \"compilation\",\r",
											"          \"total_tracks\": 9,\r",
											"          \"available_markets\": [\r",
											"            \"CA\",\r",
											"            \"BR\",\r",
											"            \"IT\"\r",
											"          ],\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"release_date\": \"1981-12\",\r",
											"          \"release_date_precision\": \"year\",\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"market\"\r",
											"          },\r",
											"          \"type\": \"album\",\r",
											"          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"album_group\": \"compilation\",\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"name\": \"string\",\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"followers\": {\r",
											"              \"href\": \"string\",\r",
											"              \"total\": 0\r",
											"            },\r",
											"            \"genres\": [\r",
											"              \"Prog rock\",\r",
											"              \"Grunge\"\r",
											"            ],\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ],\r",
											"        \"available_markets\": [\r",
											"          \"string\"\r",
											"        ],\r",
											"        \"disc_number\": 0,\r",
											"        \"duration_ms\": 0,\r",
											"        \"explicit\": true,\r",
											"        \"external_ids\": {\r",
											"          \"isrc\": \"string\",\r",
											"          \"ean\": \"string\",\r",
											"          \"upc\": \"string\"\r",
											"        },\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"is_playable\": true,\r",
											"        \"linked_from\": {\r",
											"          \"album\": {\r",
											"            \"album_type\": \"compilation\",\r",
											"            \"total_tracks\": 9,\r",
											"            \"available_markets\": [\r",
											"              \"CA\",\r",
											"              \"BR\",\r",
											"              \"IT\"\r",
											"            ],\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"release_date\": \"1981-12\",\r",
											"            \"release_date_precision\": \"year\",\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"market\"\r",
											"            },\r",
											"            \"type\": \"album\",\r",
											"            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"album_group\": \"compilation\",\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"name\": \"string\",\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ]\r",
											"          },\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"followers\": {\r",
											"                \"href\": \"string\",\r",
											"                \"total\": 0\r",
											"              },\r",
											"              \"genres\": [\r",
											"                \"Prog rock\",\r",
											"                \"Grunge\"\r",
											"              ],\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ],\r",
											"          \"available_markets\": [\r",
											"            \"string\"\r",
											"          ],\r",
											"          \"disc_number\": 0,\r",
											"          \"duration_ms\": 0,\r",
											"          \"explicit\": true,\r",
											"          \"external_ids\": {\r",
											"            \"isrc\": \"string\",\r",
											"            \"ean\": \"string\",\r",
											"            \"upc\": \"string\"\r",
											"          },\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"is_playable\": true,\r",
											"          \"linked_from\": {\r",
											"            \"album\": {\r",
											"              \"album_type\": \"compilation\",\r",
											"              \"total_tracks\": 9,\r",
											"              \"available_markets\": [\r",
											"                \"CA\",\r",
											"                \"BR\",\r",
											"                \"IT\"\r",
											"              ],\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"release_date\": \"1981-12\",\r",
											"              \"release_date_precision\": \"year\",\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"market\"\r",
											"              },\r",
											"              \"type\": \"album\",\r",
											"              \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"album_group\": \"compilation\",\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"name\": \"string\",\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                  \"href\": \"string\",\r",
											"                  \"total\": 0\r",
											"                },\r",
											"                \"genres\": [\r",
											"                  \"Prog rock\",\r",
											"                  \"Grunge\"\r",
											"                ],\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ],\r",
											"            \"available_markets\": [\r",
											"              \"string\"\r",
											"            ],\r",
											"            \"disc_number\": 0,\r",
											"            \"duration_ms\": 0,\r",
											"            \"explicit\": true,\r",
											"            \"external_ids\": {\r",
											"              \"isrc\": \"string\",\r",
											"              \"ean\": \"string\",\r",
											"              \"upc\": \"string\"\r",
											"            },\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"is_playable\": true,\r",
											"            \"linked_from\": {\r",
											"              \"album\": {\r",
											"                \"album_type\": \"compilation\",\r",
											"                \"total_tracks\": 9,\r",
											"                \"available_markets\": [\r",
											"                  \"CA\",\r",
											"                  \"BR\",\r",
											"                  \"IT\"\r",
											"                ],\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"release_date\": \"1981-12\",\r",
											"                \"release_date_precision\": \"year\",\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"market\"\r",
											"                },\r",
											"                \"type\": \"album\",\r",
											"                \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"album_group\": \"compilation\",\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"name\": \"string\",\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ]\r",
											"              },\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"followers\": {\r",
											"                    \"href\": \"string\",\r",
											"                    \"total\": 0\r",
											"                  },\r",
											"                  \"genres\": [\r",
											"                    \"Prog rock\",\r",
											"                    \"Grunge\"\r",
											"                  ],\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ],\r",
											"              \"available_markets\": [\r",
											"                \"string\"\r",
											"              ],\r",
											"              \"disc_number\": 0,\r",
											"              \"duration_ms\": 0,\r",
											"              \"explicit\": true,\r",
											"              \"external_ids\": {\r",
											"                \"isrc\": \"string\",\r",
											"                \"ean\": \"string\",\r",
											"                \"upc\": \"string\"\r",
											"              },\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"is_playable\": true,\r",
											"              \"linked_from\": {\r",
											"                \"album\": {\r",
											"                  \"album_type\": \"compilation\",\r",
											"                  \"total_tracks\": 9,\r",
											"                  \"available_markets\": [\r",
											"                    \"CA\",\r",
											"                    \"BR\",\r",
											"                    \"IT\"\r",
											"                  ],\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"release_date\": \"1981-12\",\r",
											"                  \"release_date_precision\": \"year\",\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"market\"\r",
											"                  },\r",
											"                  \"type\": \"album\",\r",
											"                  \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"album_group\": \"compilation\",\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"name\": \"string\",\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ]\r",
											"                },\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"followers\": {\r",
											"                      \"href\": \"string\",\r",
											"                      \"total\": 0\r",
											"                    },\r",
											"                    \"genres\": [\r",
											"                      \"Prog rock\",\r",
											"                      \"Grunge\"\r",
											"                    ],\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ],\r",
											"                \"available_markets\": [\r",
											"                  \"string\"\r",
											"                ],\r",
											"                \"disc_number\": 0,\r",
											"                \"duration_ms\": 0,\r",
											"                \"explicit\": true,\r",
											"                \"external_ids\": {\r",
											"                  \"isrc\": \"string\",\r",
											"                  \"ean\": \"string\",\r",
											"                  \"upc\": \"string\"\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"is_playable\": true,\r",
											"                \"linked_from\": {\r",
											"                  \"album\": {\r",
											"                    \"album_type\": \"compilation\",\r",
											"                    \"total_tracks\": 9,\r",
											"                    \"available_markets\": [\r",
											"                      \"CA\",\r",
											"                      \"BR\",\r",
											"                      \"IT\"\r",
											"                    ],\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"release_date\": \"1981-12\",\r",
											"                    \"release_date_precision\": \"year\",\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"market\"\r",
											"                    },\r",
											"                    \"type\": \"album\",\r",
											"                    \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"album_group\": \"compilation\",\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"name\": \"string\",\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ]\r",
											"                  },\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"followers\": {\r",
											"                        \"href\": \"string\",\r",
											"                        \"total\": 0\r",
											"                      },\r",
											"                      \"genres\": [\r",
											"                        \"Prog rock\",\r",
											"                        \"Grunge\"\r",
											"                      ],\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ],\r",
											"                  \"available_markets\": [\r",
											"                    \"string\"\r",
											"                  ],\r",
											"                  \"disc_number\": 0,\r",
											"                  \"duration_ms\": 0,\r",
											"                  \"explicit\": true,\r",
											"                  \"external_ids\": {\r",
											"                    \"isrc\": \"string\",\r",
											"                    \"ean\": \"string\",\r",
											"                    \"upc\": \"string\"\r",
											"                  },\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"is_playable\": true,\r",
											"                  \"linked_from\": {\r",
											"                    \"album\": {\r",
											"                      \"album_type\": \"compilation\",\r",
											"                      \"total_tracks\": 9,\r",
											"                      \"available_markets\": [\r",
											"                        \"CA\",\r",
											"                        \"BR\",\r",
											"                        \"IT\"\r",
											"                      ],\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"release_date\": \"1981-12\",\r",
											"                      \"release_date_precision\": \"year\",\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"market\"\r",
											"                      },\r",
											"                      \"type\": \"album\",\r",
											"                      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"album_group\": \"compilation\",\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"name\": \"string\",\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ]\r",
											"                    },\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"followers\": {\r",
											"                          \"href\": \"string\",\r",
											"                          \"total\": 0\r",
											"                        },\r",
											"                        \"genres\": [\r",
											"                          \"Prog rock\",\r",
											"                          \"Grunge\"\r",
											"                        ],\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ],\r",
											"                    \"available_markets\": [\r",
											"                      \"string\"\r",
											"                    ],\r",
											"                    \"disc_number\": 0,\r",
											"                    \"duration_ms\": 0,\r",
											"                    \"explicit\": true,\r",
											"                    \"external_ids\": {\r",
											"                      \"isrc\": \"string\",\r",
											"                      \"ean\": \"string\",\r",
											"                      \"upc\": \"string\"\r",
											"                    },\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"is_playable\": true,\r",
											"                    \"linked_from\": {\r",
											"                      \"album\": {\r",
											"                        \"album_type\": \"compilation\",\r",
											"                        \"total_tracks\": 9,\r",
											"                        \"available_markets\": [\r",
											"                          \"CA\",\r",
											"                          \"BR\",\r",
											"                          \"IT\"\r",
											"                        ],\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"release_date\": \"1981-12\",\r",
											"                        \"release_date_precision\": \"year\",\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"market\"\r",
											"                        },\r",
											"                        \"type\": \"album\",\r",
											"                        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"album_group\": \"compilation\",\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"name\": \"string\",\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ]\r",
											"                      },\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"followers\": {\r",
											"                            \"href\": \"string\",\r",
											"                            \"total\": 0\r",
											"                          },\r",
											"                          \"genres\": [\r",
											"                            \"Prog rock\",\r",
											"                            \"Grunge\"\r",
											"                          ],\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ],\r",
											"                      \"available_markets\": [\r",
											"                        \"string\"\r",
											"                      ],\r",
											"                      \"disc_number\": 0,\r",
											"                      \"duration_ms\": 0,\r",
											"                      \"explicit\": true,\r",
											"                      \"external_ids\": {\r",
											"                        \"isrc\": \"string\",\r",
											"                        \"ean\": \"string\",\r",
											"                        \"upc\": \"string\"\r",
											"                      },\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"is_playable\": true,\r",
											"                      \"linked_from\": {\r",
											"                        \"album\": {\r",
											"                          \"album_type\": \"compilation\",\r",
											"                          \"total_tracks\": 9,\r",
											"                          \"available_markets\": [\r",
											"                            \"CA\",\r",
											"                            \"BR\",\r",
											"                            \"IT\"\r",
											"                          ],\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"release_date\": \"1981-12\",\r",
											"                          \"release_date_precision\": \"year\",\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"market\"\r",
											"                          },\r",
											"                          \"type\": \"album\",\r",
											"                          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"album_group\": \"compilation\",\r",
											"                          \"artists\": [\r",
											"                            {}\r",
											"                          ]\r",
											"                        },\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"followers\": {},\r",
											"                            \"genres\": [\r",
											"                              \"Prog rock\",\r",
											"                              \"Grunge\"\r",
											"                            ],\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ],\r",
											"                        \"available_markets\": [\r",
											"                          \"string\"\r",
											"                        ],\r",
											"                        \"disc_number\": 0,\r",
											"                        \"duration_ms\": 0,\r",
											"                        \"explicit\": true,\r",
											"                        \"external_ids\": {\r",
											"                          \"isrc\": \"string\",\r",
											"                          \"ean\": \"string\",\r",
											"                          \"upc\": \"string\"\r",
											"                        },\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"is_playable\": true,\r",
											"                        \"linked_from\": {\r",
											"                          \"album\": {\r",
											"                            \"album_type\": \"compilation\",\r",
											"                            \"total_tracks\": 9,\r",
											"                            \"available_markets\": [\r",
											"                              \"CA\",\r",
											"                              \"BR\",\r",
											"                              \"IT\"\r",
											"                            ],\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"release_date\": \"1981-12\",\r",
											"                            \"release_date_precision\": \"year\",\r",
											"                            \"restrictions\": {},\r",
											"                            \"type\": \"album\",\r",
											"                            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"album_group\": \"compilation\",\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ]\r",
											"                          },\r",
											"                          \"artists\": [\r",
											"                            {\r",
											"                              \"genres\": [],\r",
											"                              \"images\": []\r",
											"                            }\r",
											"                          ],\r",
											"                          \"available_markets\": [\r",
											"                            \"string\"\r",
											"                          ],\r",
											"                          \"disc_number\": 0,\r",
											"                          \"duration_ms\": 0,\r",
											"                          \"explicit\": true,\r",
											"                          \"external_ids\": {\r",
											"                            \"isrc\": \"string\",\r",
											"                            \"ean\": \"string\",\r",
											"                            \"upc\": \"string\"\r",
											"                          },\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"is_playable\": true,\r",
											"                          \"linked_from\": {\r",
											"                            \"album\": {\r",
											"                              \"available_markets\": [],\r",
											"                              \"images\": [],\r",
											"                              \"artists\": []\r",
											"                            },\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"available_markets\": [\r",
											"                              null\r",
											"                            ],\r",
											"                            \"disc_number\": 0,\r",
											"                            \"duration_ms\": 0,\r",
											"                            \"explicit\": true,\r",
											"                            \"external_ids\": {},\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"is_playable\": true,\r",
											"                            \"linked_from\": {\r",
											"                              \"artists\": [],\r",
											"                              \"available_markets\": []\r",
											"                            },\r",
											"                            \"restrictions\": {},\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"preview_url\": \"string\",\r",
											"                            \"track_number\": 0,\r",
											"                            \"type\": \"string\",\r",
											"                            \"uri\": \"string\",\r",
											"                            \"is_local\": true\r",
											"                          },\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"string\"\r",
											"                          },\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"preview_url\": \"string\",\r",
											"                          \"track_number\": 0,\r",
											"                          \"type\": \"string\",\r",
											"                          \"uri\": \"string\",\r",
											"                          \"is_local\": true\r",
											"                        },\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"string\"\r",
											"                        },\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"preview_url\": \"string\",\r",
											"                        \"track_number\": 0,\r",
											"                        \"type\": \"string\",\r",
											"                        \"uri\": \"string\",\r",
											"                        \"is_local\": true\r",
											"                      },\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"string\"\r",
											"                      },\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"preview_url\": \"string\",\r",
											"                      \"track_number\": 0,\r",
											"                      \"type\": \"string\",\r",
											"                      \"uri\": \"string\",\r",
											"                      \"is_local\": true\r",
											"                    },\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"string\"\r",
											"                    },\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"preview_url\": \"string\",\r",
											"                    \"track_number\": 0,\r",
											"                    \"type\": \"string\",\r",
											"                    \"uri\": \"string\",\r",
											"                    \"is_local\": true\r",
											"                  },\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"string\"\r",
											"                  },\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"preview_url\": \"string\",\r",
											"                  \"track_number\": 0,\r",
											"                  \"type\": \"string\",\r",
											"                  \"uri\": \"string\",\r",
											"                  \"is_local\": true\r",
											"                },\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"string\"\r",
											"                },\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"preview_url\": \"string\",\r",
											"                \"track_number\": 0,\r",
											"                \"type\": \"string\",\r",
											"                \"uri\": \"string\",\r",
											"                \"is_local\": true\r",
											"              },\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"string\"\r",
											"              },\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"preview_url\": \"string\",\r",
											"              \"track_number\": 0,\r",
											"              \"type\": \"string\",\r",
											"              \"uri\": \"string\",\r",
											"              \"is_local\": true\r",
											"            },\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"string\"\r",
											"            },\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"preview_url\": \"string\",\r",
											"            \"track_number\": 0,\r",
											"            \"type\": \"string\",\r",
											"            \"uri\": \"string\",\r",
											"            \"is_local\": true\r",
											"          },\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"string\"\r",
											"          },\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"preview_url\": \"string\",\r",
											"          \"track_number\": 0,\r",
											"          \"type\": \"string\",\r",
											"          \"uri\": \"string\",\r",
											"          \"is_local\": true\r",
											"        },\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"string\"\r",
											"        },\r",
											"        \"name\": \"string\",\r",
											"        \"popularity\": 0,\r",
											"        \"preview_url\": \"string\",\r",
											"        \"track_number\": 0,\r",
											"        \"type\": \"string\",\r",
											"        \"uri\": \"string\",\r",
											"        \"is_local\": true\r",
											"      },\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"string\"\r",
											"      },\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"preview_url\": \"string\",\r",
											"      \"track_number\": 0,\r",
											"      \"type\": \"string\",\r",
											"      \"uri\": \"string\",\r",
											"      \"is_local\": true\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/0TnOYISbd1XYRBk9myaseg/top-tracks?market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"0TnOYISbd1XYRBk9myaseg",
										"top-tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Artist's Top Tracks without market (expected 200 but got 400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"tracks\": [\r",
											"    {\r",
											"      \"album\": {\r",
											"        \"album_type\": \"compilation\",\r",
											"        \"total_tracks\": 9,\r",
											"        \"available_markets\": [\r",
											"          \"CA\",\r",
											"          \"BR\",\r",
											"          \"IT\"\r",
											"        ],\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"name\": \"string\",\r",
											"        \"release_date\": \"1981-12\",\r",
											"        \"release_date_precision\": \"year\",\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"market\"\r",
											"        },\r",
											"        \"type\": \"album\",\r",
											"        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"album_group\": \"compilation\",\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"name\": \"string\",\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ]\r",
											"      },\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"followers\": {\r",
											"            \"href\": \"string\",\r",
											"            \"total\": 0\r",
											"          },\r",
											"          \"genres\": [\r",
											"            \"Prog rock\",\r",
											"            \"Grunge\"\r",
											"          ],\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"available_markets\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"disc_number\": 0,\r",
											"      \"duration_ms\": 0,\r",
											"      \"explicit\": true,\r",
											"      \"external_ids\": {\r",
											"        \"isrc\": \"string\",\r",
											"        \"ean\": \"string\",\r",
											"        \"upc\": \"string\"\r",
											"      },\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"is_playable\": true,\r",
											"      \"linked_from\": {\r",
											"        \"album\": {\r",
											"          \"album_type\": \"compilation\",\r",
											"          \"total_tracks\": 9,\r",
											"          \"available_markets\": [\r",
											"            \"CA\",\r",
											"            \"BR\",\r",
											"            \"IT\"\r",
											"          ],\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"release_date\": \"1981-12\",\r",
											"          \"release_date_precision\": \"year\",\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"market\"\r",
											"          },\r",
											"          \"type\": \"album\",\r",
											"          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"album_group\": \"compilation\",\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"name\": \"string\",\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"followers\": {\r",
											"              \"href\": \"string\",\r",
											"              \"total\": 0\r",
											"            },\r",
											"            \"genres\": [\r",
											"              \"Prog rock\",\r",
											"              \"Grunge\"\r",
											"            ],\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ],\r",
											"        \"available_markets\": [\r",
											"          \"string\"\r",
											"        ],\r",
											"        \"disc_number\": 0,\r",
											"        \"duration_ms\": 0,\r",
											"        \"explicit\": true,\r",
											"        \"external_ids\": {\r",
											"          \"isrc\": \"string\",\r",
											"          \"ean\": \"string\",\r",
											"          \"upc\": \"string\"\r",
											"        },\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"is_playable\": true,\r",
											"        \"linked_from\": {\r",
											"          \"album\": {\r",
											"            \"album_type\": \"compilation\",\r",
											"            \"total_tracks\": 9,\r",
											"            \"available_markets\": [\r",
											"              \"CA\",\r",
											"              \"BR\",\r",
											"              \"IT\"\r",
											"            ],\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"release_date\": \"1981-12\",\r",
											"            \"release_date_precision\": \"year\",\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"market\"\r",
											"            },\r",
											"            \"type\": \"album\",\r",
											"            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"album_group\": \"compilation\",\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"name\": \"string\",\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ]\r",
											"          },\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"followers\": {\r",
											"                \"href\": \"string\",\r",
											"                \"total\": 0\r",
											"              },\r",
											"              \"genres\": [\r",
											"                \"Prog rock\",\r",
											"                \"Grunge\"\r",
											"              ],\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ],\r",
											"          \"available_markets\": [\r",
											"            \"string\"\r",
											"          ],\r",
											"          \"disc_number\": 0,\r",
											"          \"duration_ms\": 0,\r",
											"          \"explicit\": true,\r",
											"          \"external_ids\": {\r",
											"            \"isrc\": \"string\",\r",
											"            \"ean\": \"string\",\r",
											"            \"upc\": \"string\"\r",
											"          },\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"is_playable\": true,\r",
											"          \"linked_from\": {\r",
											"            \"album\": {\r",
											"              \"album_type\": \"compilation\",\r",
											"              \"total_tracks\": 9,\r",
											"              \"available_markets\": [\r",
											"                \"CA\",\r",
											"                \"BR\",\r",
											"                \"IT\"\r",
											"              ],\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"release_date\": \"1981-12\",\r",
											"              \"release_date_precision\": \"year\",\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"market\"\r",
											"              },\r",
											"              \"type\": \"album\",\r",
											"              \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"album_group\": \"compilation\",\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"name\": \"string\",\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                  \"href\": \"string\",\r",
											"                  \"total\": 0\r",
											"                },\r",
											"                \"genres\": [\r",
											"                  \"Prog rock\",\r",
											"                  \"Grunge\"\r",
											"                ],\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ],\r",
											"            \"available_markets\": [\r",
											"              \"string\"\r",
											"            ],\r",
											"            \"disc_number\": 0,\r",
											"            \"duration_ms\": 0,\r",
											"            \"explicit\": true,\r",
											"            \"external_ids\": {\r",
											"              \"isrc\": \"string\",\r",
											"              \"ean\": \"string\",\r",
											"              \"upc\": \"string\"\r",
											"            },\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"is_playable\": true,\r",
											"            \"linked_from\": {\r",
											"              \"album\": {\r",
											"                \"album_type\": \"compilation\",\r",
											"                \"total_tracks\": 9,\r",
											"                \"available_markets\": [\r",
											"                  \"CA\",\r",
											"                  \"BR\",\r",
											"                  \"IT\"\r",
											"                ],\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"release_date\": \"1981-12\",\r",
											"                \"release_date_precision\": \"year\",\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"market\"\r",
											"                },\r",
											"                \"type\": \"album\",\r",
											"                \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"album_group\": \"compilation\",\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"name\": \"string\",\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ]\r",
											"              },\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"followers\": {\r",
											"                    \"href\": \"string\",\r",
											"                    \"total\": 0\r",
											"                  },\r",
											"                  \"genres\": [\r",
											"                    \"Prog rock\",\r",
											"                    \"Grunge\"\r",
											"                  ],\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ],\r",
											"              \"available_markets\": [\r",
											"                \"string\"\r",
											"              ],\r",
											"              \"disc_number\": 0,\r",
											"              \"duration_ms\": 0,\r",
											"              \"explicit\": true,\r",
											"              \"external_ids\": {\r",
											"                \"isrc\": \"string\",\r",
											"                \"ean\": \"string\",\r",
											"                \"upc\": \"string\"\r",
											"              },\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"is_playable\": true,\r",
											"              \"linked_from\": {\r",
											"                \"album\": {\r",
											"                  \"album_type\": \"compilation\",\r",
											"                  \"total_tracks\": 9,\r",
											"                  \"available_markets\": [\r",
											"                    \"CA\",\r",
											"                    \"BR\",\r",
											"                    \"IT\"\r",
											"                  ],\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"release_date\": \"1981-12\",\r",
											"                  \"release_date_precision\": \"year\",\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"market\"\r",
											"                  },\r",
											"                  \"type\": \"album\",\r",
											"                  \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"album_group\": \"compilation\",\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"name\": \"string\",\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ]\r",
											"                },\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"followers\": {\r",
											"                      \"href\": \"string\",\r",
											"                      \"total\": 0\r",
											"                    },\r",
											"                    \"genres\": [\r",
											"                      \"Prog rock\",\r",
											"                      \"Grunge\"\r",
											"                    ],\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ],\r",
											"                \"available_markets\": [\r",
											"                  \"string\"\r",
											"                ],\r",
											"                \"disc_number\": 0,\r",
											"                \"duration_ms\": 0,\r",
											"                \"explicit\": true,\r",
											"                \"external_ids\": {\r",
											"                  \"isrc\": \"string\",\r",
											"                  \"ean\": \"string\",\r",
											"                  \"upc\": \"string\"\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"is_playable\": true,\r",
											"                \"linked_from\": {\r",
											"                  \"album\": {\r",
											"                    \"album_type\": \"compilation\",\r",
											"                    \"total_tracks\": 9,\r",
											"                    \"available_markets\": [\r",
											"                      \"CA\",\r",
											"                      \"BR\",\r",
											"                      \"IT\"\r",
											"                    ],\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"release_date\": \"1981-12\",\r",
											"                    \"release_date_precision\": \"year\",\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"market\"\r",
											"                    },\r",
											"                    \"type\": \"album\",\r",
											"                    \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"album_group\": \"compilation\",\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"name\": \"string\",\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ]\r",
											"                  },\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"followers\": {\r",
											"                        \"href\": \"string\",\r",
											"                        \"total\": 0\r",
											"                      },\r",
											"                      \"genres\": [\r",
											"                        \"Prog rock\",\r",
											"                        \"Grunge\"\r",
											"                      ],\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ],\r",
											"                  \"available_markets\": [\r",
											"                    \"string\"\r",
											"                  ],\r",
											"                  \"disc_number\": 0,\r",
											"                  \"duration_ms\": 0,\r",
											"                  \"explicit\": true,\r",
											"                  \"external_ids\": {\r",
											"                    \"isrc\": \"string\",\r",
											"                    \"ean\": \"string\",\r",
											"                    \"upc\": \"string\"\r",
											"                  },\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"is_playable\": true,\r",
											"                  \"linked_from\": {\r",
											"                    \"album\": {\r",
											"                      \"album_type\": \"compilation\",\r",
											"                      \"total_tracks\": 9,\r",
											"                      \"available_markets\": [\r",
											"                        \"CA\",\r",
											"                        \"BR\",\r",
											"                        \"IT\"\r",
											"                      ],\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"release_date\": \"1981-12\",\r",
											"                      \"release_date_precision\": \"year\",\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"market\"\r",
											"                      },\r",
											"                      \"type\": \"album\",\r",
											"                      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"album_group\": \"compilation\",\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"name\": \"string\",\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ]\r",
											"                    },\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"followers\": {\r",
											"                          \"href\": \"string\",\r",
											"                          \"total\": 0\r",
											"                        },\r",
											"                        \"genres\": [\r",
											"                          \"Prog rock\",\r",
											"                          \"Grunge\"\r",
											"                        ],\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ],\r",
											"                    \"available_markets\": [\r",
											"                      \"string\"\r",
											"                    ],\r",
											"                    \"disc_number\": 0,\r",
											"                    \"duration_ms\": 0,\r",
											"                    \"explicit\": true,\r",
											"                    \"external_ids\": {\r",
											"                      \"isrc\": \"string\",\r",
											"                      \"ean\": \"string\",\r",
											"                      \"upc\": \"string\"\r",
											"                    },\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"is_playable\": true,\r",
											"                    \"linked_from\": {\r",
											"                      \"album\": {\r",
											"                        \"album_type\": \"compilation\",\r",
											"                        \"total_tracks\": 9,\r",
											"                        \"available_markets\": [\r",
											"                          \"CA\",\r",
											"                          \"BR\",\r",
											"                          \"IT\"\r",
											"                        ],\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"release_date\": \"1981-12\",\r",
											"                        \"release_date_precision\": \"year\",\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"market\"\r",
											"                        },\r",
											"                        \"type\": \"album\",\r",
											"                        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"album_group\": \"compilation\",\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"name\": \"string\",\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ]\r",
											"                      },\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"followers\": {\r",
											"                            \"href\": \"string\",\r",
											"                            \"total\": 0\r",
											"                          },\r",
											"                          \"genres\": [\r",
											"                            \"Prog rock\",\r",
											"                            \"Grunge\"\r",
											"                          ],\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ],\r",
											"                      \"available_markets\": [\r",
											"                        \"string\"\r",
											"                      ],\r",
											"                      \"disc_number\": 0,\r",
											"                      \"duration_ms\": 0,\r",
											"                      \"explicit\": true,\r",
											"                      \"external_ids\": {\r",
											"                        \"isrc\": \"string\",\r",
											"                        \"ean\": \"string\",\r",
											"                        \"upc\": \"string\"\r",
											"                      },\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"is_playable\": true,\r",
											"                      \"linked_from\": {\r",
											"                        \"album\": {\r",
											"                          \"album_type\": \"compilation\",\r",
											"                          \"total_tracks\": 9,\r",
											"                          \"available_markets\": [\r",
											"                            \"CA\",\r",
											"                            \"BR\",\r",
											"                            \"IT\"\r",
											"                          ],\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"release_date\": \"1981-12\",\r",
											"                          \"release_date_precision\": \"year\",\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"market\"\r",
											"                          },\r",
											"                          \"type\": \"album\",\r",
											"                          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"album_group\": \"compilation\",\r",
											"                          \"artists\": [\r",
											"                            {}\r",
											"                          ]\r",
											"                        },\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"followers\": {},\r",
											"                            \"genres\": [\r",
											"                              \"Prog rock\",\r",
											"                              \"Grunge\"\r",
											"                            ],\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ],\r",
											"                        \"available_markets\": [\r",
											"                          \"string\"\r",
											"                        ],\r",
											"                        \"disc_number\": 0,\r",
											"                        \"duration_ms\": 0,\r",
											"                        \"explicit\": true,\r",
											"                        \"external_ids\": {\r",
											"                          \"isrc\": \"string\",\r",
											"                          \"ean\": \"string\",\r",
											"                          \"upc\": \"string\"\r",
											"                        },\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"is_playable\": true,\r",
											"                        \"linked_from\": {\r",
											"                          \"album\": {\r",
											"                            \"album_type\": \"compilation\",\r",
											"                            \"total_tracks\": 9,\r",
											"                            \"available_markets\": [\r",
											"                              \"CA\",\r",
											"                              \"BR\",\r",
											"                              \"IT\"\r",
											"                            ],\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"release_date\": \"1981-12\",\r",
											"                            \"release_date_precision\": \"year\",\r",
											"                            \"restrictions\": {},\r",
											"                            \"type\": \"album\",\r",
											"                            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"album_group\": \"compilation\",\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ]\r",
											"                          },\r",
											"                          \"artists\": [\r",
											"                            {\r",
											"                              \"genres\": [],\r",
											"                              \"images\": []\r",
											"                            }\r",
											"                          ],\r",
											"                          \"available_markets\": [\r",
											"                            \"string\"\r",
											"                          ],\r",
											"                          \"disc_number\": 0,\r",
											"                          \"duration_ms\": 0,\r",
											"                          \"explicit\": true,\r",
											"                          \"external_ids\": {\r",
											"                            \"isrc\": \"string\",\r",
											"                            \"ean\": \"string\",\r",
											"                            \"upc\": \"string\"\r",
											"                          },\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"is_playable\": true,\r",
											"                          \"linked_from\": {\r",
											"                            \"album\": {\r",
											"                              \"available_markets\": [],\r",
											"                              \"images\": [],\r",
											"                              \"artists\": []\r",
											"                            },\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"available_markets\": [\r",
											"                              null\r",
											"                            ],\r",
											"                            \"disc_number\": 0,\r",
											"                            \"duration_ms\": 0,\r",
											"                            \"explicit\": true,\r",
											"                            \"external_ids\": {},\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"is_playable\": true,\r",
											"                            \"linked_from\": {\r",
											"                              \"artists\": [],\r",
											"                              \"available_markets\": []\r",
											"                            },\r",
											"                            \"restrictions\": {},\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"preview_url\": \"string\",\r",
											"                            \"track_number\": 0,\r",
											"                            \"type\": \"string\",\r",
											"                            \"uri\": \"string\",\r",
											"                            \"is_local\": true\r",
											"                          },\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"string\"\r",
											"                          },\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"preview_url\": \"string\",\r",
											"                          \"track_number\": 0,\r",
											"                          \"type\": \"string\",\r",
											"                          \"uri\": \"string\",\r",
											"                          \"is_local\": true\r",
											"                        },\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"string\"\r",
											"                        },\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"preview_url\": \"string\",\r",
											"                        \"track_number\": 0,\r",
											"                        \"type\": \"string\",\r",
											"                        \"uri\": \"string\",\r",
											"                        \"is_local\": true\r",
											"                      },\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"string\"\r",
											"                      },\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"preview_url\": \"string\",\r",
											"                      \"track_number\": 0,\r",
											"                      \"type\": \"string\",\r",
											"                      \"uri\": \"string\",\r",
											"                      \"is_local\": true\r",
											"                    },\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"string\"\r",
											"                    },\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"preview_url\": \"string\",\r",
											"                    \"track_number\": 0,\r",
											"                    \"type\": \"string\",\r",
											"                    \"uri\": \"string\",\r",
											"                    \"is_local\": true\r",
											"                  },\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"string\"\r",
											"                  },\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"preview_url\": \"string\",\r",
											"                  \"track_number\": 0,\r",
											"                  \"type\": \"string\",\r",
											"                  \"uri\": \"string\",\r",
											"                  \"is_local\": true\r",
											"                },\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"string\"\r",
											"                },\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"preview_url\": \"string\",\r",
											"                \"track_number\": 0,\r",
											"                \"type\": \"string\",\r",
											"                \"uri\": \"string\",\r",
											"                \"is_local\": true\r",
											"              },\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"string\"\r",
											"              },\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"preview_url\": \"string\",\r",
											"              \"track_number\": 0,\r",
											"              \"type\": \"string\",\r",
											"              \"uri\": \"string\",\r",
											"              \"is_local\": true\r",
											"            },\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"string\"\r",
											"            },\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"preview_url\": \"string\",\r",
											"            \"track_number\": 0,\r",
											"            \"type\": \"string\",\r",
											"            \"uri\": \"string\",\r",
											"            \"is_local\": true\r",
											"          },\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"string\"\r",
											"          },\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"preview_url\": \"string\",\r",
											"          \"track_number\": 0,\r",
											"          \"type\": \"string\",\r",
											"          \"uri\": \"string\",\r",
											"          \"is_local\": true\r",
											"        },\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"string\"\r",
											"        },\r",
											"        \"name\": \"string\",\r",
											"        \"popularity\": 0,\r",
											"        \"preview_url\": \"string\",\r",
											"        \"track_number\": 0,\r",
											"        \"type\": \"string\",\r",
											"        \"uri\": \"string\",\r",
											"        \"is_local\": true\r",
											"      },\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"string\"\r",
											"      },\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"preview_url\": \"string\",\r",
											"      \"track_number\": 0,\r",
											"      \"type\": \"string\",\r",
											"      \"uri\": \"string\",\r",
											"      \"is_local\": true\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/0TnOYISbd1XYRBk9myaseg/top-tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"0TnOYISbd1XYRBk9myaseg",
										"top-tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ES",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Artist's Related Artists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"artists\": [\r",
											"    {\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"followers\": {\r",
											"        \"href\": \"string\",\r",
											"        \"total\": 0\r",
											"      },\r",
											"      \"genres\": [\r",
											"        \"Prog rock\",\r",
											"        \"Grunge\"\r",
											"      ],\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"type\": \"artist\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/2GE6MAdyGzeXpY9TwIYd3l/related-artists",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"2GE6MAdyGzeXpY9TwIYd3l",
										"related-artists"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Try to get artist info using track id (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"non existing id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/4oDw1eWMzFZrQ16ogMLXpG",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"4oDw1eWMzFZrQ16ogMLXpG"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get several artists less than a min (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists?ids=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists"
									],
									"query": [
										{
											"key": "ids",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get several artists with 1 track id (expected 400 but got 200)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 200 BUT EXPECTED 400\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"artists\": [\r",
											"    {\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"followers\": {\r",
											"        \"href\": \"string\",\r",
											"        \"total\": 0\r",
											"      },\r",
											"      \"genres\": [\r",
											"        \"Prog rock\",\r",
											"        \"Grunge\"\r",
											"      ],\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"type\": \"artist\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"//pm.test(\"Body contains requested ids\", function () {\r",
											"//    var jsonData = pm.response.json();\r",
											"//    pm.expect(jsonData.artists.id).to.eql('2CIMQHirSU0MQqyYHq0eOx','2C57dN52uHvrHOxijzpIgu3E',//'2C1vCWHaC5f2uS3yhpwWbIA6');\r",
											"//});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists?ids=5zS8r5hRRk1jzD41yYS1NO%2C6xS3zemJD9h94iueQvGqVk%2C2L2unNFaPbDxjg3NqzpqhJ%2C0IVapwlnM3dEOiMsHXsghT%2C49jnSQa0nLfgkSREjJ03Az%2C2wouN3QXejYa5tKetYdcVX%2C2Y2gruKUC2cAjhe0h2RpzV%2C48C2RLG6w7o4jAJjCJKZM8%2C6y80I9YZi4DOpbaSUlL725%2C2TWKl87Jnmd5MApKEpVCxA%2C46Ce0QmI1mE2bl5VQ4P9N8%2C3ikKyCOrsMeANi0d5u8BCR%2C1J6xqDysFw6YiQ0vMvIKds%2C1R84VlXnFFULOsWWV8IrCQ%2C1YRGQOk4Mk9EpM6nTJhXtK%2C6QOZnx4vYV6v6YcIH9u5ew%2C6jF345xlOryBwNKDbuAyN3%2C4jLcgJjDGmW0HmvbSf6lEI%2C0KydPQPUUoTNhmiHKOg5Er",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists"
									],
									"query": [
										{
											"key": "ids",
											"value": "5zS8r5hRRk1jzD41yYS1NO%2C6xS3zemJD9h94iueQvGqVk%2C2L2unNFaPbDxjg3NqzpqhJ%2C0IVapwlnM3dEOiMsHXsghT%2C49jnSQa0nLfgkSREjJ03Az%2C2wouN3QXejYa5tKetYdcVX%2C2Y2gruKUC2cAjhe0h2RpzV%2C48C2RLG6w7o4jAJjCJKZM8%2C6y80I9YZi4DOpbaSUlL725%2C2TWKl87Jnmd5MApKEpVCxA%2C46Ce0QmI1mE2bl5VQ4P9N8%2C3ikKyCOrsMeANi0d5u8BCR%2C1J6xqDysFw6YiQ0vMvIKds%2C1R84VlXnFFULOsWWV8IrCQ%2C1YRGQOk4Mk9EpM6nTJhXtK%2C6QOZnx4vYV6v6YcIH9u5ew%2C6jF345xlOryBwNKDbuAyN3%2C4jLcgJjDGmW0HmvbSf6lEI%2C0KydPQPUUoTNhmiHKOg5Er"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to get artist's top tracks using more than 1 ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/0OylZQzS2T7iRxTUzvdnhL%68GryM5mhDPrhRzMohl3Ui/top-tracks?market=US",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"0OylZQzS2T7iRxTUzvdnhL%68GryM5mhDPrhRzMohl3Ui",
										"top-tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Artist's Top Tracks using track id instead of artist id (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"non existing id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/7b0gAj5gwZtjRHxkt2RaKt/top-tracks?market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"7b0gAj5gwZtjRHxkt2RaKt",
										"top-tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Artist's Top Tracks using invalid market code (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid market code\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQAmJsAHnpdGm2cA6ksz7AmQY8_g8w_9FE_Fx7Yh_FUGLmmx2CgJ7gojLPRK0uLCIxTjla1ht1wnH34jc_n_NBkcQkyDesLfBWnKSajoJYoIJR3jZ1A0Eimq5K1cYaIo8WB6nxCZrO46T0oqcn1qhaF71GSxyfPA90YIk7w8BSHLJ4jMw2oB21k9Xg8yMXCxnDFewhI-ypfqtveDAjt8P9XHGJHntuowAtxWj4cBxKi1E0peDK1RHw85CHM_3NgHsxHvsvaShiwzXzfRTa1qOx8NNossIy1BICyDaQ7TPb8cCI_Ns3btlAK1mgWvT0eK"
									}
								],
								"url": {
									"raw": "{{base_url}}/artists/0TnOYISbd1XYRBk9myaseg/top-tracks?market=ZZ",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"artists",
										"0TnOYISbd1XYRBk9myaseg",
										"top-tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ZZ"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "ALBUMS",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get Album",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"album_type\": \"compilation\",\r",
											"  \"total_tracks\": 9,\r",
											"  \"available_markets\": [\r",
											"    \"CA\",\r",
											"    \"BR\",\r",
											"    \"IT\"\r",
											"  ],\r",
											"  \"external_urls\": {\r",
											"    \"spotify\": \"string\"\r",
											"  },\r",
											"  \"href\": \"string\",\r",
											"  \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"  \"images\": [\r",
											"    {\r",
											"      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"      \"height\": 300,\r",
											"      \"width\": 300\r",
											"    }\r",
											"  ],\r",
											"  \"name\": \"string\",\r",
											"  \"release_date\": \"1981-12\",\r",
											"  \"release_date_precision\": \"year\",\r",
											"  \"restrictions\": {\r",
											"    \"reason\": \"market\"\r",
											"  },\r",
											"  \"type\": \"album\",\r",
											"  \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"  \"artists\": [\r",
											"    {\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"followers\": {\r",
											"        \"href\": \"string\",\r",
											"        \"total\": 0\r",
											"      },\r",
											"      \"genres\": [\r",
											"        \"Prog rock\",\r",
											"        \"Grunge\"\r",
											"      ],\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"type\": \"artist\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ],\r",
											"  \"tracks\": {\r",
											"    \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"    \"items\": [\r",
											"      {}\r",
											"    ],\r",
											"    \"limit\": 20,\r",
											"    \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"    \"offset\": 0,\r",
											"    \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"    \"total\": 4\r",
											"  }\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/6QPaCnJb5HP6Q8Ob8z8ZVx?market=US",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"6QPaCnJb5HP6Q8Ob8z8ZVx"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Albums",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"albums\": [\r",
											"    {\r",
											"      \"album_type\": \"compilation\",\r",
											"      \"total_tracks\": 9,\r",
											"      \"available_markets\": [\r",
											"        \"CA\",\r",
											"        \"BR\",\r",
											"        \"IT\"\r",
											"      ],\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"release_date\": \"1981-12\",\r",
											"      \"release_date_precision\": \"year\",\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"market\"\r",
											"      },\r",
											"      \"type\": \"album\",\r",
											"      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"followers\": {\r",
											"            \"href\": \"string\",\r",
											"            \"total\": 0\r",
											"          },\r",
											"          \"genres\": [\r",
											"            \"Prog rock\",\r",
											"            \"Grunge\"\r",
											"          ],\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"tracks\": {\r",
											"        \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"        \"items\": [\r",
											"          {}\r",
											"        ],\r",
											"        \"limit\": 20,\r",
											"        \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"        \"offset\": 0,\r",
											"        \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"        \"total\": 4\r",
											"      }\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums?ids=382ObEPsp2rxGrnsizN5TX%2C1A2GTWGtFfWp7KSQTwWOyo%2C2noRn2Aes5aoNVsU6iWThc&market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums"
									],
									"query": [
										{
											"key": "ids",
											"value": "382ObEPsp2rxGrnsizN5TX%2C1A2GTWGtFfWp7KSQTwWOyo%2C2noRn2Aes5aoNVsU6iWThc"
										},
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Album Tracks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/6QPaCnJb5HP6Q8Ob8z8ZVx/tracks?market=US&limit=10&offset=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"6QPaCnJb5HP6Q8Ob8z8ZVx",
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Get Album using more than 1 ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/0hmiyzFfuOGdLUp14nYlBU%3zy7dLqQiBDQKgJP2ACSrh?market=US",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"0hmiyzFfuOGdLUp14nYlBU%3zy7dLqQiBDQKgJP2ACSrh"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Album using user id (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/uod391yrwdouqsv3l9hj5dc6u",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"uod391yrwdouqsv3l9hj5dc6u"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Album with invalid market code (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid market code\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/6QPaCnJb5HP6Q8Ob8z8ZVx?market=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"6QPaCnJb5HP6Q8Ob8z8ZVx"
									],
									"query": [
										{
											"key": "market",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Albums using  mixed albums + track ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums?ids=2JITZxH1kxJkXtp4xUmgVF%382ObEPsp2rxGrnsizN5TX%2C1A2GTWGtFfWp7KSQTwWOyo%2C2noRn2Aes5aoNVsU6iWThc%5G2WwNBAwLjHRVIEKLl8Vd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums"
									],
									"query": [
										{
											"key": "ids",
											"value": "2JITZxH1kxJkXtp4xUmgVF%382ObEPsp2rxGrnsizN5TX%2C1A2GTWGtFfWp7KSQTwWOyo%2C2noRn2Aes5aoNVsU6iWThc%5G2WwNBAwLjHRVIEKLl8Vd"
										},
										{
											"key": "market",
											"value": "ES",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Albums exceeding the limit of ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"too many ids requested\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums?ids=0DFbQjp468sMiIMTrZdr5w%2C0V91xiAtoMqAduPnQQ9YtL%2C04ccGfrNTBKXQKyPHjoWTV%2C5R5QsAlwBdOEgYmiz7GIcE%2C29PcwiQUhb8K9rJDNhTAvz%2C69mR7YiwQTw7nvlFKBOp7Y%2C3VlZzZzYPy7nsXwGxlHPlu%2C7baUsg73GrsSwnK4iqQJk7%2C4rgo2M2vbIFqVDCnlL6AMY%2C3iRimtEPIXz546GBx63UjC%2C0ITykxrmzKV6wJ8wsiybJn%2C4Qlt9lQidbI8GC2Kvuy4ZF%2C3N4fmmPCO3Vh6QTKCiDyob%2C4Gxql1kKRbHfHZnqrBGuAz2%2C2JITZxH1kxJkXtp4xUmgVF%2C7Ju51RSqybe8bdxbzUqY97%2C7FUIQIDxNu0F8iH98irz7N%2C0DFbQjp468sMiIMTrZdr5w%2C5kU780ntZsCfCMhEn1DLQE%2C1Urrycrm9pFy2F3xSoQ3fj%2C2jp10nhpPcZkuUaFougyN3%2C4UMfUfwA3LmIav2nJq7cBY&market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums"
									],
									"query": [
										{
											"key": "ids",
											"value": "0DFbQjp468sMiIMTrZdr5w%2C0V91xiAtoMqAduPnQQ9YtL%2C04ccGfrNTBKXQKyPHjoWTV%2C5R5QsAlwBdOEgYmiz7GIcE%2C29PcwiQUhb8K9rJDNhTAvz%2C69mR7YiwQTw7nvlFKBOp7Y%2C3VlZzZzYPy7nsXwGxlHPlu%2C7baUsg73GrsSwnK4iqQJk7%2C4rgo2M2vbIFqVDCnlL6AMY%2C3iRimtEPIXz546GBx63UjC%2C0ITykxrmzKV6wJ8wsiybJn%2C4Qlt9lQidbI8GC2Kvuy4ZF%2C3N4fmmPCO3Vh6QTKCiDyob%2C4Gxql1kKRbHfHZnqrBGuAz2%2C2JITZxH1kxJkXtp4xUmgVF%2C7Ju51RSqybe8bdxbzUqY97%2C7FUIQIDxNu0F8iH98irz7N%2C0DFbQjp468sMiIMTrZdr5w%2C5kU780ntZsCfCMhEn1DLQE%2C1Urrycrm9pFy2F3xSoQ3fj%2C2jp10nhpPcZkuUaFougyN3%2C4UMfUfwA3LmIav2nJq7cBY"
										},
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Album Tracks using more than 1 id (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/6QPaCnJb5HP6Q8Ob8z8ZVx/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"6QPaCnJb5HP6Q8Ob8z8ZVx",
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Album Tracks using show's id (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"if (pm.response.to.have.status(404)){\r",
											"    pm.test(\"Response is showing error, non existing id\", function(){   \r",
											"    });\r",
											"    pm.test(\"Status code is 404 Not found\", function(){\r",
											"        pm.response.to.have.status(404)\r",
											"    });\r",
											"    return\r",
											"}\r",
											"\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/15146gu3fssSXNcZSntJki/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"15146gu3fssSXNcZSntJki",
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Album Tracks exceeding the limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid limit, cannot be greater than 50\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDJXJqaqAv2T3gO3wzrEeHTRRsimXmxgX_NOJrpklaBR5iWSQk3jlPqyr2L2HEyaoBfIuWh1RdI4cJiRn4Y99DHeQ6eYNuhOEYJcNaeNUEhJojND3SPQB0Xy1mg2vMHQ6b5tY8iv37LlcCiP5O-zB2u6SifAydFrn3zYjJBgpe6p3wBgVZs"
									}
								],
								"url": {
									"raw": "{{base_url}}/albums/6QPaCnJb5HP6Q8Ob8z8ZVx/tracks?limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"albums",
										"6QPaCnJb5HP6Q8Ob8z8ZVx",
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "US",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "51"
										},
										{
											"key": "offset",
											"value": "0",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "TRACKS",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get a Single Track",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"album\": {\r",
											"    \"album_type\": \"compilation\",\r",
											"    \"total_tracks\": 9,\r",
											"    \"available_markets\": [\r",
											"      \"CA\",\r",
											"      \"BR\",\r",
											"      \"IT\"\r",
											"    ],\r",
											"    \"external_urls\": {\r",
											"      \"spotify\": \"string\"\r",
											"    },\r",
											"    \"href\": \"string\",\r",
											"    \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"    \"images\": [\r",
											"      {\r",
											"        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"        \"height\": 300,\r",
											"        \"width\": 300\r",
											"      }\r",
											"    ],\r",
											"    \"name\": \"string\",\r",
											"    \"release_date\": \"1981-12\",\r",
											"    \"release_date_precision\": \"year\",\r",
											"    \"restrictions\": {\r",
											"      \"reason\": \"market\"\r",
											"    },\r",
											"    \"type\": \"album\",\r",
											"    \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"    \"album_group\": \"compilation\",\r",
											"    \"artists\": [\r",
											"      {\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"name\": \"string\",\r",
											"        \"type\": \"artist\",\r",
											"        \"uri\": \"string\"\r",
											"      }\r",
											"    ]\r",
											"  },\r",
											"  \"artists\": [\r",
											"    {\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"followers\": {\r",
											"        \"href\": \"string\",\r",
											"        \"total\": 0\r",
											"      },\r",
											"      \"genres\": [\r",
											"        \"Prog rock\",\r",
											"        \"Grunge\"\r",
											"      ],\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"type\": \"artist\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ],\r",
											"  \"available_markets\": [\r",
											"    \"string\"\r",
											"  ],\r",
											"  \"disc_number\": 0,\r",
											"  \"duration_ms\": 0,\r",
											"  \"explicit\": true,\r",
											"  \"external_ids\": {\r",
											"    \"isrc\": \"string\",\r",
											"    \"ean\": \"string\",\r",
											"    \"upc\": \"string\"\r",
											"  },\r",
											"  \"external_urls\": {\r",
											"    \"spotify\": \"string\"\r",
											"  },\r",
											"  \"href\": \"string\",\r",
											"  \"id\": \"string\",\r",
											"  \"is_playable\": true,\r",
											"  \"linked_from\": {\r",
											"    \"album\": {\r",
											"      \"album_type\": \"compilation\",\r",
											"      \"total_tracks\": 9,\r",
											"      \"available_markets\": [\r",
											"        \"CA\",\r",
											"        \"BR\",\r",
											"        \"IT\"\r",
											"      ],\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"release_date\": \"1981-12\",\r",
											"      \"release_date_precision\": \"year\",\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"market\"\r",
											"      },\r",
											"      \"type\": \"album\",\r",
											"      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"      \"album_group\": \"compilation\",\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"name\": \"string\",\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"artists\": [\r",
											"      {\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"followers\": {\r",
											"          \"href\": \"string\",\r",
											"          \"total\": 0\r",
											"        },\r",
											"        \"genres\": [\r",
											"          \"Prog rock\",\r",
											"          \"Grunge\"\r",
											"        ],\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"name\": \"string\",\r",
											"        \"popularity\": 0,\r",
											"        \"type\": \"artist\",\r",
											"        \"uri\": \"string\"\r",
											"      }\r",
											"    ],\r",
											"    \"available_markets\": [\r",
											"      \"string\"\r",
											"    ],\r",
											"    \"disc_number\": 0,\r",
											"    \"duration_ms\": 0,\r",
											"    \"explicit\": true,\r",
											"    \"external_ids\": {\r",
											"      \"isrc\": \"string\",\r",
											"      \"ean\": \"string\",\r",
											"      \"upc\": \"string\"\r",
											"    },\r",
											"    \"external_urls\": {\r",
											"      \"spotify\": \"string\"\r",
											"    },\r",
											"    \"href\": \"string\",\r",
											"    \"id\": \"string\",\r",
											"    \"is_playable\": true,\r",
											"    \"linked_from\": {\r",
											"      \"album\": {\r",
											"        \"album_type\": \"compilation\",\r",
											"        \"total_tracks\": 9,\r",
											"        \"available_markets\": [\r",
											"          \"CA\",\r",
											"          \"BR\",\r",
											"          \"IT\"\r",
											"        ],\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"name\": \"string\",\r",
											"        \"release_date\": \"1981-12\",\r",
											"        \"release_date_precision\": \"year\",\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"market\"\r",
											"        },\r",
											"        \"type\": \"album\",\r",
											"        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"album_group\": \"compilation\",\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"name\": \"string\",\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ]\r",
											"      },\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"followers\": {\r",
											"            \"href\": \"string\",\r",
											"            \"total\": 0\r",
											"          },\r",
											"          \"genres\": [\r",
											"            \"Prog rock\",\r",
											"            \"Grunge\"\r",
											"          ],\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"available_markets\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"disc_number\": 0,\r",
											"      \"duration_ms\": 0,\r",
											"      \"explicit\": true,\r",
											"      \"external_ids\": {\r",
											"        \"isrc\": \"string\",\r",
											"        \"ean\": \"string\",\r",
											"        \"upc\": \"string\"\r",
											"      },\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"is_playable\": true,\r",
											"      \"linked_from\": {\r",
											"        \"album\": {\r",
											"          \"album_type\": \"compilation\",\r",
											"          \"total_tracks\": 9,\r",
											"          \"available_markets\": [\r",
											"            \"CA\",\r",
											"            \"BR\",\r",
											"            \"IT\"\r",
											"          ],\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"release_date\": \"1981-12\",\r",
											"          \"release_date_precision\": \"year\",\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"market\"\r",
											"          },\r",
											"          \"type\": \"album\",\r",
											"          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"album_group\": \"compilation\",\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"name\": \"string\",\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"followers\": {\r",
											"              \"href\": \"string\",\r",
											"              \"total\": 0\r",
											"            },\r",
											"            \"genres\": [\r",
											"              \"Prog rock\",\r",
											"              \"Grunge\"\r",
											"            ],\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ],\r",
											"        \"available_markets\": [\r",
											"          \"string\"\r",
											"        ],\r",
											"        \"disc_number\": 0,\r",
											"        \"duration_ms\": 0,\r",
											"        \"explicit\": true,\r",
											"        \"external_ids\": {\r",
											"          \"isrc\": \"string\",\r",
											"          \"ean\": \"string\",\r",
											"          \"upc\": \"string\"\r",
											"        },\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"is_playable\": true,\r",
											"        \"linked_from\": {\r",
											"          \"album\": {\r",
											"            \"album_type\": \"compilation\",\r",
											"            \"total_tracks\": 9,\r",
											"            \"available_markets\": [\r",
											"              \"CA\",\r",
											"              \"BR\",\r",
											"              \"IT\"\r",
											"            ],\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"release_date\": \"1981-12\",\r",
											"            \"release_date_precision\": \"year\",\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"market\"\r",
											"            },\r",
											"            \"type\": \"album\",\r",
											"            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"album_group\": \"compilation\",\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"name\": \"string\",\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ]\r",
											"          },\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"followers\": {\r",
											"                \"href\": \"string\",\r",
											"                \"total\": 0\r",
											"              },\r",
											"              \"genres\": [\r",
											"                \"Prog rock\",\r",
											"                \"Grunge\"\r",
											"              ],\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ],\r",
											"          \"available_markets\": [\r",
											"            \"string\"\r",
											"          ],\r",
											"          \"disc_number\": 0,\r",
											"          \"duration_ms\": 0,\r",
											"          \"explicit\": true,\r",
											"          \"external_ids\": {\r",
											"            \"isrc\": \"string\",\r",
											"            \"ean\": \"string\",\r",
											"            \"upc\": \"string\"\r",
											"          },\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"is_playable\": true,\r",
											"          \"linked_from\": {\r",
											"            \"album\": {\r",
											"              \"album_type\": \"compilation\",\r",
											"              \"total_tracks\": 9,\r",
											"              \"available_markets\": [\r",
											"                \"CA\",\r",
											"                \"BR\",\r",
											"                \"IT\"\r",
											"              ],\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"release_date\": \"1981-12\",\r",
											"              \"release_date_precision\": \"year\",\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"market\"\r",
											"              },\r",
											"              \"type\": \"album\",\r",
											"              \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"album_group\": \"compilation\",\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"name\": \"string\",\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                  \"href\": \"string\",\r",
											"                  \"total\": 0\r",
											"                },\r",
											"                \"genres\": [\r",
											"                  \"Prog rock\",\r",
											"                  \"Grunge\"\r",
											"                ],\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ],\r",
											"            \"available_markets\": [\r",
											"              \"string\"\r",
											"            ],\r",
											"            \"disc_number\": 0,\r",
											"            \"duration_ms\": 0,\r",
											"            \"explicit\": true,\r",
											"            \"external_ids\": {\r",
											"              \"isrc\": \"string\",\r",
											"              \"ean\": \"string\",\r",
											"              \"upc\": \"string\"\r",
											"            },\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"is_playable\": true,\r",
											"            \"linked_from\": {\r",
											"              \"album\": {\r",
											"                \"album_type\": \"compilation\",\r",
											"                \"total_tracks\": 9,\r",
											"                \"available_markets\": [\r",
											"                  \"CA\",\r",
											"                  \"BR\",\r",
											"                  \"IT\"\r",
											"                ],\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"release_date\": \"1981-12\",\r",
											"                \"release_date_precision\": \"year\",\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"market\"\r",
											"                },\r",
											"                \"type\": \"album\",\r",
											"                \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"album_group\": \"compilation\",\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"name\": \"string\",\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ]\r",
											"              },\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"followers\": {\r",
											"                    \"href\": \"string\",\r",
											"                    \"total\": 0\r",
											"                  },\r",
											"                  \"genres\": [\r",
											"                    \"Prog rock\",\r",
											"                    \"Grunge\"\r",
											"                  ],\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ],\r",
											"              \"available_markets\": [\r",
											"                \"string\"\r",
											"              ],\r",
											"              \"disc_number\": 0,\r",
											"              \"duration_ms\": 0,\r",
											"              \"explicit\": true,\r",
											"              \"external_ids\": {\r",
											"                \"isrc\": \"string\",\r",
											"                \"ean\": \"string\",\r",
											"                \"upc\": \"string\"\r",
											"              },\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"is_playable\": true,\r",
											"              \"linked_from\": {\r",
											"                \"album\": {\r",
											"                  \"album_type\": \"compilation\",\r",
											"                  \"total_tracks\": 9,\r",
											"                  \"available_markets\": [\r",
											"                    \"CA\",\r",
											"                    \"BR\",\r",
											"                    \"IT\"\r",
											"                  ],\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"release_date\": \"1981-12\",\r",
											"                  \"release_date_precision\": \"year\",\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"market\"\r",
											"                  },\r",
											"                  \"type\": \"album\",\r",
											"                  \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"album_group\": \"compilation\",\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"name\": \"string\",\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ]\r",
											"                },\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"followers\": {\r",
											"                      \"href\": \"string\",\r",
											"                      \"total\": 0\r",
											"                    },\r",
											"                    \"genres\": [\r",
											"                      \"Prog rock\",\r",
											"                      \"Grunge\"\r",
											"                    ],\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ],\r",
											"                \"available_markets\": [\r",
											"                  \"string\"\r",
											"                ],\r",
											"                \"disc_number\": 0,\r",
											"                \"duration_ms\": 0,\r",
											"                \"explicit\": true,\r",
											"                \"external_ids\": {\r",
											"                  \"isrc\": \"string\",\r",
											"                  \"ean\": \"string\",\r",
											"                  \"upc\": \"string\"\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"is_playable\": true,\r",
											"                \"linked_from\": {\r",
											"                  \"album\": {\r",
											"                    \"album_type\": \"compilation\",\r",
											"                    \"total_tracks\": 9,\r",
											"                    \"available_markets\": [\r",
											"                      \"CA\",\r",
											"                      \"BR\",\r",
											"                      \"IT\"\r",
											"                    ],\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"release_date\": \"1981-12\",\r",
											"                    \"release_date_precision\": \"year\",\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"market\"\r",
											"                    },\r",
											"                    \"type\": \"album\",\r",
											"                    \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"album_group\": \"compilation\",\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"name\": \"string\",\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ]\r",
											"                  },\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"followers\": {\r",
											"                        \"href\": \"string\",\r",
											"                        \"total\": 0\r",
											"                      },\r",
											"                      \"genres\": [\r",
											"                        \"Prog rock\",\r",
											"                        \"Grunge\"\r",
											"                      ],\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ],\r",
											"                  \"available_markets\": [\r",
											"                    \"string\"\r",
											"                  ],\r",
											"                  \"disc_number\": 0,\r",
											"                  \"duration_ms\": 0,\r",
											"                  \"explicit\": true,\r",
											"                  \"external_ids\": {\r",
											"                    \"isrc\": \"string\",\r",
											"                    \"ean\": \"string\",\r",
											"                    \"upc\": \"string\"\r",
											"                  },\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"is_playable\": true,\r",
											"                  \"linked_from\": {\r",
											"                    \"album\": {\r",
											"                      \"album_type\": \"compilation\",\r",
											"                      \"total_tracks\": 9,\r",
											"                      \"available_markets\": [\r",
											"                        \"CA\",\r",
											"                        \"BR\",\r",
											"                        \"IT\"\r",
											"                      ],\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"release_date\": \"1981-12\",\r",
											"                      \"release_date_precision\": \"year\",\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"market\"\r",
											"                      },\r",
											"                      \"type\": \"album\",\r",
											"                      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"album_group\": \"compilation\",\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"name\": \"string\",\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ]\r",
											"                    },\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"followers\": {\r",
											"                          \"href\": \"string\",\r",
											"                          \"total\": 0\r",
											"                        },\r",
											"                        \"genres\": [\r",
											"                          \"Prog rock\",\r",
											"                          \"Grunge\"\r",
											"                        ],\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ],\r",
											"                    \"available_markets\": [\r",
											"                      \"string\"\r",
											"                    ],\r",
											"                    \"disc_number\": 0,\r",
											"                    \"duration_ms\": 0,\r",
											"                    \"explicit\": true,\r",
											"                    \"external_ids\": {\r",
											"                      \"isrc\": \"string\",\r",
											"                      \"ean\": \"string\",\r",
											"                      \"upc\": \"string\"\r",
											"                    },\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"is_playable\": true,\r",
											"                    \"linked_from\": {\r",
											"                      \"album\": {\r",
											"                        \"album_type\": \"compilation\",\r",
											"                        \"total_tracks\": 9,\r",
											"                        \"available_markets\": [\r",
											"                          \"CA\",\r",
											"                          \"BR\",\r",
											"                          \"IT\"\r",
											"                        ],\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"release_date\": \"1981-12\",\r",
											"                        \"release_date_precision\": \"year\",\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"market\"\r",
											"                        },\r",
											"                        \"type\": \"album\",\r",
											"                        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"album_group\": \"compilation\",\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"name\": \"string\",\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ]\r",
											"                      },\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"followers\": {\r",
											"                            \"href\": \"string\",\r",
											"                            \"total\": 0\r",
											"                          },\r",
											"                          \"genres\": [\r",
											"                            \"Prog rock\",\r",
											"                            \"Grunge\"\r",
											"                          ],\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ],\r",
											"                      \"available_markets\": [\r",
											"                        \"string\"\r",
											"                      ],\r",
											"                      \"disc_number\": 0,\r",
											"                      \"duration_ms\": 0,\r",
											"                      \"explicit\": true,\r",
											"                      \"external_ids\": {\r",
											"                        \"isrc\": \"string\",\r",
											"                        \"ean\": \"string\",\r",
											"                        \"upc\": \"string\"\r",
											"                      },\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"is_playable\": true,\r",
											"                      \"linked_from\": {\r",
											"                        \"album\": {\r",
											"                          \"album_type\": \"compilation\",\r",
											"                          \"total_tracks\": 9,\r",
											"                          \"available_markets\": [\r",
											"                            \"CA\",\r",
											"                            \"BR\",\r",
											"                            \"IT\"\r",
											"                          ],\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"release_date\": \"1981-12\",\r",
											"                          \"release_date_precision\": \"year\",\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"market\"\r",
											"                          },\r",
											"                          \"type\": \"album\",\r",
											"                          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"album_group\": \"compilation\",\r",
											"                          \"artists\": [\r",
											"                            {}\r",
											"                          ]\r",
											"                        },\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"followers\": {},\r",
											"                            \"genres\": [\r",
											"                              \"Prog rock\",\r",
											"                              \"Grunge\"\r",
											"                            ],\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ],\r",
											"                        \"available_markets\": [\r",
											"                          \"string\"\r",
											"                        ],\r",
											"                        \"disc_number\": 0,\r",
											"                        \"duration_ms\": 0,\r",
											"                        \"explicit\": true,\r",
											"                        \"external_ids\": {\r",
											"                          \"isrc\": \"string\",\r",
											"                          \"ean\": \"string\",\r",
											"                          \"upc\": \"string\"\r",
											"                        },\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"is_playable\": true,\r",
											"                        \"linked_from\": {\r",
											"                          \"album\": {\r",
											"                            \"album_type\": \"compilation\",\r",
											"                            \"total_tracks\": 9,\r",
											"                            \"available_markets\": [\r",
											"                              \"CA\",\r",
											"                              \"BR\",\r",
											"                              \"IT\"\r",
											"                            ],\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"release_date\": \"1981-12\",\r",
											"                            \"release_date_precision\": \"year\",\r",
											"                            \"restrictions\": {},\r",
											"                            \"type\": \"album\",\r",
											"                            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"album_group\": \"compilation\",\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ]\r",
											"                          },\r",
											"                          \"artists\": [\r",
											"                            {\r",
											"                              \"genres\": [],\r",
											"                              \"images\": []\r",
											"                            }\r",
											"                          ],\r",
											"                          \"available_markets\": [\r",
											"                            \"string\"\r",
											"                          ],\r",
											"                          \"disc_number\": 0,\r",
											"                          \"duration_ms\": 0,\r",
											"                          \"explicit\": true,\r",
											"                          \"external_ids\": {\r",
											"                            \"isrc\": \"string\",\r",
											"                            \"ean\": \"string\",\r",
											"                            \"upc\": \"string\"\r",
											"                          },\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"is_playable\": true,\r",
											"                          \"linked_from\": {\r",
											"                            \"album\": {\r",
											"                              \"available_markets\": [],\r",
											"                              \"images\": [],\r",
											"                              \"artists\": []\r",
											"                            },\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"available_markets\": [\r",
											"                              null\r",
											"                            ],\r",
											"                            \"disc_number\": 0,\r",
											"                            \"duration_ms\": 0,\r",
											"                            \"explicit\": true,\r",
											"                            \"external_ids\": {},\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"is_playable\": true,\r",
											"                            \"linked_from\": {\r",
											"                              \"artists\": [],\r",
											"                              \"available_markets\": []\r",
											"                            },\r",
											"                            \"restrictions\": {},\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"preview_url\": \"string\",\r",
											"                            \"track_number\": 0,\r",
											"                            \"type\": \"string\",\r",
											"                            \"uri\": \"string\",\r",
											"                            \"is_local\": true\r",
											"                          },\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"string\"\r",
											"                          },\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"preview_url\": \"string\",\r",
											"                          \"track_number\": 0,\r",
											"                          \"type\": \"string\",\r",
											"                          \"uri\": \"string\",\r",
											"                          \"is_local\": true\r",
											"                        },\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"string\"\r",
											"                        },\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"preview_url\": \"string\",\r",
											"                        \"track_number\": 0,\r",
											"                        \"type\": \"string\",\r",
											"                        \"uri\": \"string\",\r",
											"                        \"is_local\": true\r",
											"                      },\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"string\"\r",
											"                      },\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"preview_url\": \"string\",\r",
											"                      \"track_number\": 0,\r",
											"                      \"type\": \"string\",\r",
											"                      \"uri\": \"string\",\r",
											"                      \"is_local\": true\r",
											"                    },\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"string\"\r",
											"                    },\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"preview_url\": \"string\",\r",
											"                    \"track_number\": 0,\r",
											"                    \"type\": \"string\",\r",
											"                    \"uri\": \"string\",\r",
											"                    \"is_local\": true\r",
											"                  },\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"string\"\r",
											"                  },\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"preview_url\": \"string\",\r",
											"                  \"track_number\": 0,\r",
											"                  \"type\": \"string\",\r",
											"                  \"uri\": \"string\",\r",
											"                  \"is_local\": true\r",
											"                },\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"string\"\r",
											"                },\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"preview_url\": \"string\",\r",
											"                \"track_number\": 0,\r",
											"                \"type\": \"string\",\r",
											"                \"uri\": \"string\",\r",
											"                \"is_local\": true\r",
											"              },\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"string\"\r",
											"              },\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"preview_url\": \"string\",\r",
											"              \"track_number\": 0,\r",
											"              \"type\": \"string\",\r",
											"              \"uri\": \"string\",\r",
											"              \"is_local\": true\r",
											"            },\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"string\"\r",
											"            },\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"preview_url\": \"string\",\r",
											"            \"track_number\": 0,\r",
											"            \"type\": \"string\",\r",
											"            \"uri\": \"string\",\r",
											"            \"is_local\": true\r",
											"          },\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"string\"\r",
											"          },\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"preview_url\": \"string\",\r",
											"          \"track_number\": 0,\r",
											"          \"type\": \"string\",\r",
											"          \"uri\": \"string\",\r",
											"          \"is_local\": true\r",
											"        },\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"string\"\r",
											"        },\r",
											"        \"name\": \"string\",\r",
											"        \"popularity\": 0,\r",
											"        \"preview_url\": \"string\",\r",
											"        \"track_number\": 0,\r",
											"        \"type\": \"string\",\r",
											"        \"uri\": \"string\",\r",
											"        \"is_local\": true\r",
											"      },\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"string\"\r",
											"      },\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"preview_url\": \"string\",\r",
											"      \"track_number\": 0,\r",
											"      \"type\": \"string\",\r",
											"      \"uri\": \"string\",\r",
											"      \"is_local\": true\r",
											"    },\r",
											"    \"restrictions\": {\r",
											"      \"reason\": \"string\"\r",
											"    },\r",
											"    \"name\": \"string\",\r",
											"    \"popularity\": 0,\r",
											"    \"preview_url\": \"string\",\r",
											"    \"track_number\": 0,\r",
											"    \"type\": \"string\",\r",
											"    \"uri\": \"string\",\r",
											"    \"is_local\": true\r",
											"  },\r",
											"  \"restrictions\": {\r",
											"    \"reason\": \"string\"\r",
											"  },\r",
											"  \"name\": \"string\",\r",
											"  \"popularity\": 0,\r",
											"  \"preview_url\": \"string\",\r",
											"  \"track_number\": 0,\r",
											"  \"type\": \"string\",\r",
											"  \"uri\": \"string\",\r",
											"  \"is_local\": true\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/tracks/0yQwDOqm8IfdsIQ4mI9NYC?market=US",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tracks",
										"0yQwDOqm8IfdsIQ4mI9NYC"
									],
									"query": [
										{
											"key": "market",
											"value": "US"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Tracks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"let schema = {\r",
											"  \"album\": {\r",
											"    \"album_type\": \"compilation\",\r",
											"    \"total_tracks\": 9,\r",
											"    \"available_markets\": [\r",
											"      \"CA\",\r",
											"      \"BR\",\r",
											"      \"IT\"\r",
											"    ],\r",
											"    \"external_urls\": {\r",
											"      \"spotify\": \"string\"\r",
											"    },\r",
											"    \"href\": \"string\",\r",
											"    \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"    \"images\": [\r",
											"      {\r",
											"        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"        \"height\": 300,\r",
											"        \"width\": 300\r",
											"      }\r",
											"    ],\r",
											"    \"name\": \"string\",\r",
											"    \"release_date\": \"1981-12\",\r",
											"    \"release_date_precision\": \"year\",\r",
											"    \"restrictions\": {\r",
											"      \"reason\": \"market\"\r",
											"    },\r",
											"    \"type\": \"album\",\r",
											"    \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"    \"album_group\": \"compilation\",\r",
											"    \"artists\": [\r",
											"      {\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"name\": \"string\",\r",
											"        \"type\": \"artist\",\r",
											"        \"uri\": \"string\"\r",
											"      }\r",
											"    ]\r",
											"  },\r",
											"  \"artists\": [\r",
											"    {\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"followers\": {\r",
											"        \"href\": \"string\",\r",
											"        \"total\": 0\r",
											"      },\r",
											"      \"genres\": [\r",
											"        \"Prog rock\",\r",
											"        \"Grunge\"\r",
											"      ],\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"type\": \"artist\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ],\r",
											"  \"available_markets\": [\r",
											"    \"string\"\r",
											"  ],\r",
											"  \"disc_number\": 0,\r",
											"  \"duration_ms\": 0,\r",
											"  \"explicit\": true,\r",
											"  \"external_ids\": {\r",
											"    \"isrc\": \"string\",\r",
											"    \"ean\": \"string\",\r",
											"    \"upc\": \"string\"\r",
											"  },\r",
											"  \"external_urls\": {\r",
											"    \"spotify\": \"string\"\r",
											"  },\r",
											"  \"href\": \"string\",\r",
											"  \"id\": \"string\",\r",
											"  \"is_playable\": true,\r",
											"  \"linked_from\": {\r",
											"    \"album\": {\r",
											"      \"album_type\": \"compilation\",\r",
											"      \"total_tracks\": 9,\r",
											"      \"available_markets\": [\r",
											"        \"CA\",\r",
											"        \"BR\",\r",
											"        \"IT\"\r",
											"      ],\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"name\": \"string\",\r",
											"      \"release_date\": \"1981-12\",\r",
											"      \"release_date_precision\": \"year\",\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"market\"\r",
											"      },\r",
											"      \"type\": \"album\",\r",
											"      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"      \"album_group\": \"compilation\",\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"name\": \"string\",\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"artists\": [\r",
											"      {\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"followers\": {\r",
											"          \"href\": \"string\",\r",
											"          \"total\": 0\r",
											"        },\r",
											"        \"genres\": [\r",
											"          \"Prog rock\",\r",
											"          \"Grunge\"\r",
											"        ],\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"name\": \"string\",\r",
											"        \"popularity\": 0,\r",
											"        \"type\": \"artist\",\r",
											"        \"uri\": \"string\"\r",
											"      }\r",
											"    ],\r",
											"    \"available_markets\": [\r",
											"      \"string\"\r",
											"    ],\r",
											"    \"disc_number\": 0,\r",
											"    \"duration_ms\": 0,\r",
											"    \"explicit\": true,\r",
											"    \"external_ids\": {\r",
											"      \"isrc\": \"string\",\r",
											"      \"ean\": \"string\",\r",
											"      \"upc\": \"string\"\r",
											"    },\r",
											"    \"external_urls\": {\r",
											"      \"spotify\": \"string\"\r",
											"    },\r",
											"    \"href\": \"string\",\r",
											"    \"id\": \"string\",\r",
											"    \"is_playable\": true,\r",
											"    \"linked_from\": {\r",
											"      \"album\": {\r",
											"        \"album_type\": \"compilation\",\r",
											"        \"total_tracks\": 9,\r",
											"        \"available_markets\": [\r",
											"          \"CA\",\r",
											"          \"BR\",\r",
											"          \"IT\"\r",
											"        ],\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"name\": \"string\",\r",
											"        \"release_date\": \"1981-12\",\r",
											"        \"release_date_precision\": \"year\",\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"market\"\r",
											"        },\r",
											"        \"type\": \"album\",\r",
											"        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"        \"album_group\": \"compilation\",\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"name\": \"string\",\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ]\r",
											"      },\r",
											"      \"artists\": [\r",
											"        {\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"followers\": {\r",
											"            \"href\": \"string\",\r",
											"            \"total\": 0\r",
											"          },\r",
											"          \"genres\": [\r",
											"            \"Prog rock\",\r",
											"            \"Grunge\"\r",
											"          ],\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"type\": \"artist\",\r",
											"          \"uri\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"available_markets\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"disc_number\": 0,\r",
											"      \"duration_ms\": 0,\r",
											"      \"explicit\": true,\r",
											"      \"external_ids\": {\r",
											"        \"isrc\": \"string\",\r",
											"        \"ean\": \"string\",\r",
											"        \"upc\": \"string\"\r",
											"      },\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"is_playable\": true,\r",
											"      \"linked_from\": {\r",
											"        \"album\": {\r",
											"          \"album_type\": \"compilation\",\r",
											"          \"total_tracks\": 9,\r",
											"          \"available_markets\": [\r",
											"            \"CA\",\r",
											"            \"BR\",\r",
											"            \"IT\"\r",
											"          ],\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"images\": [\r",
											"            {\r",
											"              \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"              \"height\": 300,\r",
											"              \"width\": 300\r",
											"            }\r",
											"          ],\r",
											"          \"name\": \"string\",\r",
											"          \"release_date\": \"1981-12\",\r",
											"          \"release_date_precision\": \"year\",\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"market\"\r",
											"          },\r",
											"          \"type\": \"album\",\r",
											"          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"          \"album_group\": \"compilation\",\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"name\": \"string\",\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"artists\": [\r",
											"          {\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"followers\": {\r",
											"              \"href\": \"string\",\r",
											"              \"total\": 0\r",
											"            },\r",
											"            \"genres\": [\r",
											"              \"Prog rock\",\r",
											"              \"Grunge\"\r",
											"            ],\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"type\": \"artist\",\r",
											"            \"uri\": \"string\"\r",
											"          }\r",
											"        ],\r",
											"        \"available_markets\": [\r",
											"          \"string\"\r",
											"        ],\r",
											"        \"disc_number\": 0,\r",
											"        \"duration_ms\": 0,\r",
											"        \"explicit\": true,\r",
											"        \"external_ids\": {\r",
											"          \"isrc\": \"string\",\r",
											"          \"ean\": \"string\",\r",
											"          \"upc\": \"string\"\r",
											"        },\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"is_playable\": true,\r",
											"        \"linked_from\": {\r",
											"          \"album\": {\r",
											"            \"album_type\": \"compilation\",\r",
											"            \"total_tracks\": 9,\r",
											"            \"available_markets\": [\r",
											"              \"CA\",\r",
											"              \"BR\",\r",
											"              \"IT\"\r",
											"            ],\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"images\": [\r",
											"              {\r",
											"                \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                \"height\": 300,\r",
											"                \"width\": 300\r",
											"              }\r",
											"            ],\r",
											"            \"name\": \"string\",\r",
											"            \"release_date\": \"1981-12\",\r",
											"            \"release_date_precision\": \"year\",\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"market\"\r",
											"            },\r",
											"            \"type\": \"album\",\r",
											"            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"            \"album_group\": \"compilation\",\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"name\": \"string\",\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ]\r",
											"          },\r",
											"          \"artists\": [\r",
											"            {\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"followers\": {\r",
											"                \"href\": \"string\",\r",
											"                \"total\": 0\r",
											"              },\r",
											"              \"genres\": [\r",
											"                \"Prog rock\",\r",
											"                \"Grunge\"\r",
											"              ],\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"type\": \"artist\",\r",
											"              \"uri\": \"string\"\r",
											"            }\r",
											"          ],\r",
											"          \"available_markets\": [\r",
											"            \"string\"\r",
											"          ],\r",
											"          \"disc_number\": 0,\r",
											"          \"duration_ms\": 0,\r",
											"          \"explicit\": true,\r",
											"          \"external_ids\": {\r",
											"            \"isrc\": \"string\",\r",
											"            \"ean\": \"string\",\r",
											"            \"upc\": \"string\"\r",
											"          },\r",
											"          \"external_urls\": {\r",
											"            \"spotify\": \"string\"\r",
											"          },\r",
											"          \"href\": \"string\",\r",
											"          \"id\": \"string\",\r",
											"          \"is_playable\": true,\r",
											"          \"linked_from\": {\r",
											"            \"album\": {\r",
											"              \"album_type\": \"compilation\",\r",
											"              \"total_tracks\": 9,\r",
											"              \"available_markets\": [\r",
											"                \"CA\",\r",
											"                \"BR\",\r",
											"                \"IT\"\r",
											"              ],\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"images\": [\r",
											"                {\r",
											"                  \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                  \"height\": 300,\r",
											"                  \"width\": 300\r",
											"                }\r",
											"              ],\r",
											"              \"name\": \"string\",\r",
											"              \"release_date\": \"1981-12\",\r",
											"              \"release_date_precision\": \"year\",\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"market\"\r",
											"              },\r",
											"              \"type\": \"album\",\r",
											"              \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"              \"album_group\": \"compilation\",\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"name\": \"string\",\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"artists\": [\r",
											"              {\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"followers\": {\r",
											"                  \"href\": \"string\",\r",
											"                  \"total\": 0\r",
											"                },\r",
											"                \"genres\": [\r",
											"                  \"Prog rock\",\r",
											"                  \"Grunge\"\r",
											"                ],\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"type\": \"artist\",\r",
											"                \"uri\": \"string\"\r",
											"              }\r",
											"            ],\r",
											"            \"available_markets\": [\r",
											"              \"string\"\r",
											"            ],\r",
											"            \"disc_number\": 0,\r",
											"            \"duration_ms\": 0,\r",
											"            \"explicit\": true,\r",
											"            \"external_ids\": {\r",
											"              \"isrc\": \"string\",\r",
											"              \"ean\": \"string\",\r",
											"              \"upc\": \"string\"\r",
											"            },\r",
											"            \"external_urls\": {\r",
											"              \"spotify\": \"string\"\r",
											"            },\r",
											"            \"href\": \"string\",\r",
											"            \"id\": \"string\",\r",
											"            \"is_playable\": true,\r",
											"            \"linked_from\": {\r",
											"              \"album\": {\r",
											"                \"album_type\": \"compilation\",\r",
											"                \"total_tracks\": 9,\r",
											"                \"available_markets\": [\r",
											"                  \"CA\",\r",
											"                  \"BR\",\r",
											"                  \"IT\"\r",
											"                ],\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"images\": [\r",
											"                  {\r",
											"                    \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                    \"height\": 300,\r",
											"                    \"width\": 300\r",
											"                  }\r",
											"                ],\r",
											"                \"name\": \"string\",\r",
											"                \"release_date\": \"1981-12\",\r",
											"                \"release_date_precision\": \"year\",\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"market\"\r",
											"                },\r",
											"                \"type\": \"album\",\r",
											"                \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                \"album_group\": \"compilation\",\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"name\": \"string\",\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ]\r",
											"              },\r",
											"              \"artists\": [\r",
											"                {\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"followers\": {\r",
											"                    \"href\": \"string\",\r",
											"                    \"total\": 0\r",
											"                  },\r",
											"                  \"genres\": [\r",
											"                    \"Prog rock\",\r",
											"                    \"Grunge\"\r",
											"                  ],\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"type\": \"artist\",\r",
											"                  \"uri\": \"string\"\r",
											"                }\r",
											"              ],\r",
											"              \"available_markets\": [\r",
											"                \"string\"\r",
											"              ],\r",
											"              \"disc_number\": 0,\r",
											"              \"duration_ms\": 0,\r",
											"              \"explicit\": true,\r",
											"              \"external_ids\": {\r",
											"                \"isrc\": \"string\",\r",
											"                \"ean\": \"string\",\r",
											"                \"upc\": \"string\"\r",
											"              },\r",
											"              \"external_urls\": {\r",
											"                \"spotify\": \"string\"\r",
											"              },\r",
											"              \"href\": \"string\",\r",
											"              \"id\": \"string\",\r",
											"              \"is_playable\": true,\r",
											"              \"linked_from\": {\r",
											"                \"album\": {\r",
											"                  \"album_type\": \"compilation\",\r",
											"                  \"total_tracks\": 9,\r",
											"                  \"available_markets\": [\r",
											"                    \"CA\",\r",
											"                    \"BR\",\r",
											"                    \"IT\"\r",
											"                  ],\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"images\": [\r",
											"                    {\r",
											"                      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                      \"height\": 300,\r",
											"                      \"width\": 300\r",
											"                    }\r",
											"                  ],\r",
											"                  \"name\": \"string\",\r",
											"                  \"release_date\": \"1981-12\",\r",
											"                  \"release_date_precision\": \"year\",\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"market\"\r",
											"                  },\r",
											"                  \"type\": \"album\",\r",
											"                  \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                  \"album_group\": \"compilation\",\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"name\": \"string\",\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ]\r",
											"                },\r",
											"                \"artists\": [\r",
											"                  {\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"followers\": {\r",
											"                      \"href\": \"string\",\r",
											"                      \"total\": 0\r",
											"                    },\r",
											"                    \"genres\": [\r",
											"                      \"Prog rock\",\r",
											"                      \"Grunge\"\r",
											"                    ],\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"type\": \"artist\",\r",
											"                    \"uri\": \"string\"\r",
											"                  }\r",
											"                ],\r",
											"                \"available_markets\": [\r",
											"                  \"string\"\r",
											"                ],\r",
											"                \"disc_number\": 0,\r",
											"                \"duration_ms\": 0,\r",
											"                \"explicit\": true,\r",
											"                \"external_ids\": {\r",
											"                  \"isrc\": \"string\",\r",
											"                  \"ean\": \"string\",\r",
											"                  \"upc\": \"string\"\r",
											"                },\r",
											"                \"external_urls\": {\r",
											"                  \"spotify\": \"string\"\r",
											"                },\r",
											"                \"href\": \"string\",\r",
											"                \"id\": \"string\",\r",
											"                \"is_playable\": true,\r",
											"                \"linked_from\": {\r",
											"                  \"album\": {\r",
											"                    \"album_type\": \"compilation\",\r",
											"                    \"total_tracks\": 9,\r",
											"                    \"available_markets\": [\r",
											"                      \"CA\",\r",
											"                      \"BR\",\r",
											"                      \"IT\"\r",
											"                    ],\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"images\": [\r",
											"                      {\r",
											"                        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                        \"height\": 300,\r",
											"                        \"width\": 300\r",
											"                      }\r",
											"                    ],\r",
											"                    \"name\": \"string\",\r",
											"                    \"release_date\": \"1981-12\",\r",
											"                    \"release_date_precision\": \"year\",\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"market\"\r",
											"                    },\r",
											"                    \"type\": \"album\",\r",
											"                    \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                    \"album_group\": \"compilation\",\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"name\": \"string\",\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ]\r",
											"                  },\r",
											"                  \"artists\": [\r",
											"                    {\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"followers\": {\r",
											"                        \"href\": \"string\",\r",
											"                        \"total\": 0\r",
											"                      },\r",
											"                      \"genres\": [\r",
											"                        \"Prog rock\",\r",
											"                        \"Grunge\"\r",
											"                      ],\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"type\": \"artist\",\r",
											"                      \"uri\": \"string\"\r",
											"                    }\r",
											"                  ],\r",
											"                  \"available_markets\": [\r",
											"                    \"string\"\r",
											"                  ],\r",
											"                  \"disc_number\": 0,\r",
											"                  \"duration_ms\": 0,\r",
											"                  \"explicit\": true,\r",
											"                  \"external_ids\": {\r",
											"                    \"isrc\": \"string\",\r",
											"                    \"ean\": \"string\",\r",
											"                    \"upc\": \"string\"\r",
											"                  },\r",
											"                  \"external_urls\": {\r",
											"                    \"spotify\": \"string\"\r",
											"                  },\r",
											"                  \"href\": \"string\",\r",
											"                  \"id\": \"string\",\r",
											"                  \"is_playable\": true,\r",
											"                  \"linked_from\": {\r",
											"                    \"album\": {\r",
											"                      \"album_type\": \"compilation\",\r",
											"                      \"total_tracks\": 9,\r",
											"                      \"available_markets\": [\r",
											"                        \"CA\",\r",
											"                        \"BR\",\r",
											"                        \"IT\"\r",
											"                      ],\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"images\": [\r",
											"                        {\r",
											"                          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                          \"height\": 300,\r",
											"                          \"width\": 300\r",
											"                        }\r",
											"                      ],\r",
											"                      \"name\": \"string\",\r",
											"                      \"release_date\": \"1981-12\",\r",
											"                      \"release_date_precision\": \"year\",\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"market\"\r",
											"                      },\r",
											"                      \"type\": \"album\",\r",
											"                      \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                      \"album_group\": \"compilation\",\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"name\": \"string\",\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ]\r",
											"                    },\r",
											"                    \"artists\": [\r",
											"                      {\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"followers\": {\r",
											"                          \"href\": \"string\",\r",
											"                          \"total\": 0\r",
											"                        },\r",
											"                        \"genres\": [\r",
											"                          \"Prog rock\",\r",
											"                          \"Grunge\"\r",
											"                        ],\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"type\": \"artist\",\r",
											"                        \"uri\": \"string\"\r",
											"                      }\r",
											"                    ],\r",
											"                    \"available_markets\": [\r",
											"                      \"string\"\r",
											"                    ],\r",
											"                    \"disc_number\": 0,\r",
											"                    \"duration_ms\": 0,\r",
											"                    \"explicit\": true,\r",
											"                    \"external_ids\": {\r",
											"                      \"isrc\": \"string\",\r",
											"                      \"ean\": \"string\",\r",
											"                      \"upc\": \"string\"\r",
											"                    },\r",
											"                    \"external_urls\": {\r",
											"                      \"spotify\": \"string\"\r",
											"                    },\r",
											"                    \"href\": \"string\",\r",
											"                    \"id\": \"string\",\r",
											"                    \"is_playable\": true,\r",
											"                    \"linked_from\": {\r",
											"                      \"album\": {\r",
											"                        \"album_type\": \"compilation\",\r",
											"                        \"total_tracks\": 9,\r",
											"                        \"available_markets\": [\r",
											"                          \"CA\",\r",
											"                          \"BR\",\r",
											"                          \"IT\"\r",
											"                        ],\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"images\": [\r",
											"                          {\r",
											"                            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"                            \"height\": 300,\r",
											"                            \"width\": 300\r",
											"                          }\r",
											"                        ],\r",
											"                        \"name\": \"string\",\r",
											"                        \"release_date\": \"1981-12\",\r",
											"                        \"release_date_precision\": \"year\",\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"market\"\r",
											"                        },\r",
											"                        \"type\": \"album\",\r",
											"                        \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                        \"album_group\": \"compilation\",\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"name\": \"string\",\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ]\r",
											"                      },\r",
											"                      \"artists\": [\r",
											"                        {\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"followers\": {\r",
											"                            \"href\": \"string\",\r",
											"                            \"total\": 0\r",
											"                          },\r",
											"                          \"genres\": [\r",
											"                            \"Prog rock\",\r",
											"                            \"Grunge\"\r",
											"                          ],\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"type\": \"artist\",\r",
											"                          \"uri\": \"string\"\r",
											"                        }\r",
											"                      ],\r",
											"                      \"available_markets\": [\r",
											"                        \"string\"\r",
											"                      ],\r",
											"                      \"disc_number\": 0,\r",
											"                      \"duration_ms\": 0,\r",
											"                      \"explicit\": true,\r",
											"                      \"external_ids\": {\r",
											"                        \"isrc\": \"string\",\r",
											"                        \"ean\": \"string\",\r",
											"                        \"upc\": \"string\"\r",
											"                      },\r",
											"                      \"external_urls\": {\r",
											"                        \"spotify\": \"string\"\r",
											"                      },\r",
											"                      \"href\": \"string\",\r",
											"                      \"id\": \"string\",\r",
											"                      \"is_playable\": true,\r",
											"                      \"linked_from\": {\r",
											"                        \"album\": {\r",
											"                          \"album_type\": \"compilation\",\r",
											"                          \"total_tracks\": 9,\r",
											"                          \"available_markets\": [\r",
											"                            \"CA\",\r",
											"                            \"BR\",\r",
											"                            \"IT\"\r",
											"                          ],\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"images\": [\r",
											"                            {}\r",
											"                          ],\r",
											"                          \"name\": \"string\",\r",
											"                          \"release_date\": \"1981-12\",\r",
											"                          \"release_date_precision\": \"year\",\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"market\"\r",
											"                          },\r",
											"                          \"type\": \"album\",\r",
											"                          \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                          \"album_group\": \"compilation\",\r",
											"                          \"artists\": [\r",
											"                            {}\r",
											"                          ]\r",
											"                        },\r",
											"                        \"artists\": [\r",
											"                          {\r",
											"                            \"external_urls\": {},\r",
											"                            \"followers\": {},\r",
											"                            \"genres\": [\r",
											"                              \"Prog rock\",\r",
											"                              \"Grunge\"\r",
											"                            ],\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"type\": \"artist\",\r",
											"                            \"uri\": \"string\"\r",
											"                          }\r",
											"                        ],\r",
											"                        \"available_markets\": [\r",
											"                          \"string\"\r",
											"                        ],\r",
											"                        \"disc_number\": 0,\r",
											"                        \"duration_ms\": 0,\r",
											"                        \"explicit\": true,\r",
											"                        \"external_ids\": {\r",
											"                          \"isrc\": \"string\",\r",
											"                          \"ean\": \"string\",\r",
											"                          \"upc\": \"string\"\r",
											"                        },\r",
											"                        \"external_urls\": {\r",
											"                          \"spotify\": \"string\"\r",
											"                        },\r",
											"                        \"href\": \"string\",\r",
											"                        \"id\": \"string\",\r",
											"                        \"is_playable\": true,\r",
											"                        \"linked_from\": {\r",
											"                          \"album\": {\r",
											"                            \"album_type\": \"compilation\",\r",
											"                            \"total_tracks\": 9,\r",
											"                            \"available_markets\": [\r",
											"                              \"CA\",\r",
											"                              \"BR\",\r",
											"                              \"IT\"\r",
											"                            ],\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"images\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"name\": \"string\",\r",
											"                            \"release_date\": \"1981-12\",\r",
											"                            \"release_date_precision\": \"year\",\r",
											"                            \"restrictions\": {},\r",
											"                            \"type\": \"album\",\r",
											"                            \"uri\": \"spotify:album:2up3OPMp9Tb4dAKM2erWXQ\",\r",
											"                            \"album_group\": \"compilation\",\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ]\r",
											"                          },\r",
											"                          \"artists\": [\r",
											"                            {\r",
											"                              \"genres\": [],\r",
											"                              \"images\": []\r",
											"                            }\r",
											"                          ],\r",
											"                          \"available_markets\": [\r",
											"                            \"string\"\r",
											"                          ],\r",
											"                          \"disc_number\": 0,\r",
											"                          \"duration_ms\": 0,\r",
											"                          \"explicit\": true,\r",
											"                          \"external_ids\": {\r",
											"                            \"isrc\": \"string\",\r",
											"                            \"ean\": \"string\",\r",
											"                            \"upc\": \"string\"\r",
											"                          },\r",
											"                          \"external_urls\": {\r",
											"                            \"spotify\": \"string\"\r",
											"                          },\r",
											"                          \"href\": \"string\",\r",
											"                          \"id\": \"string\",\r",
											"                          \"is_playable\": true,\r",
											"                          \"linked_from\": {\r",
											"                            \"album\": {\r",
											"                              \"available_markets\": [],\r",
											"                              \"images\": [],\r",
											"                              \"artists\": []\r",
											"                            },\r",
											"                            \"artists\": [\r",
											"                              {}\r",
											"                            ],\r",
											"                            \"available_markets\": [\r",
											"                              null\r",
											"                            ],\r",
											"                            \"disc_number\": 0,\r",
											"                            \"duration_ms\": 0,\r",
											"                            \"explicit\": true,\r",
											"                            \"external_ids\": {},\r",
											"                            \"external_urls\": {},\r",
											"                            \"href\": \"string\",\r",
											"                            \"id\": \"string\",\r",
											"                            \"is_playable\": true,\r",
											"                            \"linked_from\": {\r",
											"                              \"artists\": [],\r",
											"                              \"available_markets\": []\r",
											"                            },\r",
											"                            \"restrictions\": {},\r",
											"                            \"name\": \"string\",\r",
											"                            \"popularity\": 0,\r",
											"                            \"preview_url\": \"string\",\r",
											"                            \"track_number\": 0,\r",
											"                            \"type\": \"string\",\r",
											"                            \"uri\": \"string\",\r",
											"                            \"is_local\": true\r",
											"                          },\r",
											"                          \"restrictions\": {\r",
											"                            \"reason\": \"string\"\r",
											"                          },\r",
											"                          \"name\": \"string\",\r",
											"                          \"popularity\": 0,\r",
											"                          \"preview_url\": \"string\",\r",
											"                          \"track_number\": 0,\r",
											"                          \"type\": \"string\",\r",
											"                          \"uri\": \"string\",\r",
											"                          \"is_local\": true\r",
											"                        },\r",
											"                        \"restrictions\": {\r",
											"                          \"reason\": \"string\"\r",
											"                        },\r",
											"                        \"name\": \"string\",\r",
											"                        \"popularity\": 0,\r",
											"                        \"preview_url\": \"string\",\r",
											"                        \"track_number\": 0,\r",
											"                        \"type\": \"string\",\r",
											"                        \"uri\": \"string\",\r",
											"                        \"is_local\": true\r",
											"                      },\r",
											"                      \"restrictions\": {\r",
											"                        \"reason\": \"string\"\r",
											"                      },\r",
											"                      \"name\": \"string\",\r",
											"                      \"popularity\": 0,\r",
											"                      \"preview_url\": \"string\",\r",
											"                      \"track_number\": 0,\r",
											"                      \"type\": \"string\",\r",
											"                      \"uri\": \"string\",\r",
											"                      \"is_local\": true\r",
											"                    },\r",
											"                    \"restrictions\": {\r",
											"                      \"reason\": \"string\"\r",
											"                    },\r",
											"                    \"name\": \"string\",\r",
											"                    \"popularity\": 0,\r",
											"                    \"preview_url\": \"string\",\r",
											"                    \"track_number\": 0,\r",
											"                    \"type\": \"string\",\r",
											"                    \"uri\": \"string\",\r",
											"                    \"is_local\": true\r",
											"                  },\r",
											"                  \"restrictions\": {\r",
											"                    \"reason\": \"string\"\r",
											"                  },\r",
											"                  \"name\": \"string\",\r",
											"                  \"popularity\": 0,\r",
											"                  \"preview_url\": \"string\",\r",
											"                  \"track_number\": 0,\r",
											"                  \"type\": \"string\",\r",
											"                  \"uri\": \"string\",\r",
											"                  \"is_local\": true\r",
											"                },\r",
											"                \"restrictions\": {\r",
											"                  \"reason\": \"string\"\r",
											"                },\r",
											"                \"name\": \"string\",\r",
											"                \"popularity\": 0,\r",
											"                \"preview_url\": \"string\",\r",
											"                \"track_number\": 0,\r",
											"                \"type\": \"string\",\r",
											"                \"uri\": \"string\",\r",
											"                \"is_local\": true\r",
											"              },\r",
											"              \"restrictions\": {\r",
											"                \"reason\": \"string\"\r",
											"              },\r",
											"              \"name\": \"string\",\r",
											"              \"popularity\": 0,\r",
											"              \"preview_url\": \"string\",\r",
											"              \"track_number\": 0,\r",
											"              \"type\": \"string\",\r",
											"              \"uri\": \"string\",\r",
											"              \"is_local\": true\r",
											"            },\r",
											"            \"restrictions\": {\r",
											"              \"reason\": \"string\"\r",
											"            },\r",
											"            \"name\": \"string\",\r",
											"            \"popularity\": 0,\r",
											"            \"preview_url\": \"string\",\r",
											"            \"track_number\": 0,\r",
											"            \"type\": \"string\",\r",
											"            \"uri\": \"string\",\r",
											"            \"is_local\": true\r",
											"          },\r",
											"          \"restrictions\": {\r",
											"            \"reason\": \"string\"\r",
											"          },\r",
											"          \"name\": \"string\",\r",
											"          \"popularity\": 0,\r",
											"          \"preview_url\": \"string\",\r",
											"          \"track_number\": 0,\r",
											"          \"type\": \"string\",\r",
											"          \"uri\": \"string\",\r",
											"          \"is_local\": true\r",
											"        },\r",
											"        \"restrictions\": {\r",
											"          \"reason\": \"string\"\r",
											"        },\r",
											"        \"name\": \"string\",\r",
											"        \"popularity\": 0,\r",
											"        \"preview_url\": \"string\",\r",
											"        \"track_number\": 0,\r",
											"        \"type\": \"string\",\r",
											"        \"uri\": \"string\",\r",
											"        \"is_local\": true\r",
											"      },\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"string\"\r",
											"      },\r",
											"      \"name\": \"string\",\r",
											"      \"popularity\": 0,\r",
											"      \"preview_url\": \"string\",\r",
											"      \"track_number\": 0,\r",
											"      \"type\": \"string\",\r",
											"      \"uri\": \"string\",\r",
											"      \"is_local\": true\r",
											"    },\r",
											"    \"restrictions\": {\r",
											"      \"reason\": \"string\"\r",
											"    },\r",
											"    \"name\": \"string\",\r",
											"    \"popularity\": 0,\r",
											"    \"preview_url\": \"string\",\r",
											"    \"track_number\": 0,\r",
											"    \"type\": \"string\",\r",
											"    \"uri\": \"string\",\r",
											"    \"is_local\": true\r",
											"  },\r",
											"  \"restrictions\": {\r",
											"    \"reason\": \"string\"\r",
											"  },\r",
											"  \"name\": \"string\",\r",
											"  \"popularity\": 0,\r",
											"  \"preview_url\": \"string\",\r",
											"  \"track_number\": 0,\r",
											"  \"type\": \"string\",\r",
											"  \"uri\": \"string\",\r",
											"  \"is_local\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/tracks?market=ES&ids=7ouMYWpwJ422jRcDASZB7P%2C4VqPOruhp5EdPBeR92t6lQ%2C2takcwOaAZWiXQijPHIx7B",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										},
										{
											"key": "ids",
											"value": "7ouMYWpwJ422jRcDASZB7P%2C4VqPOruhp5EdPBeR92t6lQ%2C2takcwOaAZWiXQijPHIx7B"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Track's Audio Features",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"acousticness\": 0.00242,\r",
											"  \"analysis_url\": \"https://api.spotify.com/v1/audio-analysis/2takcwOaAZWiXQijPHIx7B\\n\",\r",
											"  \"danceability\": 0.585,\r",
											"  \"duration_ms\": 237040,\r",
											"  \"energy\": 0.842,\r",
											"  \"id\": \"2takcwOaAZWiXQijPHIx7B\",\r",
											"  \"instrumentalness\": 0.00686,\r",
											"  \"key\": 9,\r",
											"  \"liveness\": 0.0866,\r",
											"  \"loudness\": -5.883,\r",
											"  \"mode\": 0,\r",
											"  \"speechiness\": 0.0556,\r",
											"  \"tempo\": 118.211,\r",
											"  \"time_signature\": 4,\r",
											"  \"track_href\": \"https://api.spotify.com/v1/tracks/2takcwOaAZWiXQijPHIx7B\\n\",\r",
											"  \"type\": \"audio_features\",\r",
											"  \"uri\": \"spotify:track:2takcwOaAZWiXQijPHIx7B\",\r",
											"  \"valence\": 0.428\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/audio-features/0yQwDOqm8IfdsIQ4mI9NYC",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"audio-features",
										"0yQwDOqm8IfdsIQ4mI9NYC"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Track's Audio Analysis",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"  \"meta\": {\r",
											"    \"analyzer_version\": \"4.0.0\",\r",
											"    \"platform\": \"Linux\",\r",
											"    \"detailed_status\": \"OK\",\r",
											"    \"status_code\": 0,\r",
											"    \"timestamp\": 1495193577,\r",
											"    \"analysis_time\": 6.93906,\r",
											"    \"input_process\": \"libvorbisfile L+R 44100->22050\"\r",
											"  },\r",
											"  \"track\": {\r",
											"    \"num_samples\": 4585515,\r",
											"    \"duration\": 207.95985,\r",
											"    \"sample_md5\": \"string\",\r",
											"    \"offset_seconds\": 0,\r",
											"    \"window_seconds\": 0,\r",
											"    \"analysis_sample_rate\": 22050,\r",
											"    \"analysis_channels\": 1,\r",
											"    \"end_of_fade_in\": 0,\r",
											"    \"start_of_fade_out\": 201.13705,\r",
											"    \"loudness\": -5.883,\r",
											"    \"tempo\": 118.211,\r",
											"    \"tempo_confidence\": 0.73,\r",
											"    \"time_signature\": 4,\r",
											"    \"time_signature_confidence\": 0.994,\r",
											"    \"key\": 9,\r",
											"    \"key_confidence\": 0.408,\r",
											"    \"mode\": 0,\r",
											"    \"mode_confidence\": 0.485,\r",
											"    \"codestring\": \"string\",\r",
											"    \"code_version\": 3.15,\r",
											"    \"echoprintstring\": \"string\",\r",
											"    \"echoprint_version\": 4.15,\r",
											"    \"synchstring\": \"string\",\r",
											"    \"synch_version\": 1,\r",
											"    \"rhythmstring\": \"string\",\r",
											"    \"rhythm_version\": 1\r",
											"  },\r",
											"  \"bars\": [\r",
											"    {\r",
											"      \"start\": 0.49567,\r",
											"      \"duration\": 2.18749,\r",
											"      \"confidence\": 0.925\r",
											"    }\r",
											"  ],\r",
											"  \"beats\": [\r",
											"    {\r",
											"      \"start\": 0.49567,\r",
											"      \"duration\": 2.18749,\r",
											"      \"confidence\": 0.925\r",
											"    }\r",
											"  ],\r",
											"  \"sections\": [\r",
											"    {\r",
											"      \"start\": 0,\r",
											"      \"duration\": 6.97092,\r",
											"      \"confidence\": 1,\r",
											"      \"loudness\": -14.938,\r",
											"      \"tempo\": 113.178,\r",
											"      \"tempo_confidence\": 0.647,\r",
											"      \"key\": 9,\r",
											"      \"key_confidence\": 0.297,\r",
											"      \"mode\": -1,\r",
											"      \"mode_confidence\": 0.471,\r",
											"      \"time_signature\": 4,\r",
											"      \"time_signature_confidence\": 1\r",
											"    }\r",
											"  ],\r",
											"  \"segments\": [\r",
											"    {\r",
											"      \"start\": 0.70154,\r",
											"      \"duration\": 0.19891,\r",
											"      \"confidence\": 0.435,\r",
											"      \"loudness_start\": -23.053,\r",
											"      \"loudness_max\": -14.25,\r",
											"      \"loudness_max_time\": 0.07305,\r",
											"      \"loudness_end\": 0,\r",
											"      \"pitches\": [\r",
											"        0.212,\r",
											"        0.141,\r",
											"        0.294\r",
											"      ],\r",
											"      \"timbre\": [\r",
											"        42.115,\r",
											"        64.373,\r",
											"        -0.233\r",
											"      ]\r",
											"    }\r",
											"  ],\r",
											"  \"tatums\": [\r",
											"    {\r",
											"      \"start\": 0.49567,\r",
											"      \"duration\": 2.18749,\r",
											"      \"confidence\": 0.925\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/audio-analysis/11dFghVXANMlKmJXsNCbNl",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"audio-analysis",
										"11dFghVXANMlKmJXsNCbNl"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Get Several Tracks exceeding the limit of ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"too many ids requested\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/tracks?market=ES&ids=5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										},
										{
											"key": "ids",
											"value": "5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri%2C5G2WwNBAwLjHRVIEKLl8Vd%2C79TBxeI0UaRnrXA1ejgH9h%2C3OgoQ67mAE1uTcoMmbb26C%2C2CY5G9TZkQMIxSjQYa31rM%2C2jXTmYfxSBJrNj2oKE6uHd%2C29sbD3wRQqp0OTIOGTGRaS%2C6YFmlMlAAWpFIf4aVNOmri",
											"description": "50- max"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Tracks using both tracks and artists ids (400)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/tracks?market=ES&ids=0VOR7Ie9xUSb45fzIIVJQ1%7ouMYWpwJ422jRcDASZB7P%2C4VqPOruhp5EdPBeR92t6lQ%2C2takcwOaAZWiXQijPHIx7B",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tracks"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										},
										{
											"key": "ids",
											"value": "0VOR7Ie9xUSb45fzIIVJQ1%7ouMYWpwJ422jRcDASZB7P%2C4VqPOruhp5EdPBeR92t6lQ%2C2takcwOaAZWiXQijPHIx7B"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Track's Audio Features using album id (404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"analysis not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/audio-features/0ITykxrmzKV6wJ8wsiybJn",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"audio-features",
										"0ITykxrmzKV6wJ8wsiybJn"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Track's Audio Analysis for more than 1 track (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/audio-analysis/11dFghVXANMlKmJXsNCbNl%2jDIzY4PsNP9r1Mt9Sowi7",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"audio-analysis",
										"11dFghVXANMlKmJXsNCbNl%2jDIzY4PsNP9r1Mt9Sowi7"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "SHOWS AND EPISODES",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Get a Single Show",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"available_markets\": [\r",
											"    \"string\"\r",
											"  ],\r",
											"  \"copyrights\": [\r",
											"    {\r",
											"      \"text\": \"string\",\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  ],\r",
											"  \"description\": \"string\",\r",
											"  \"html_description\": \"string\",\r",
											"  \"explicit\": true,\r",
											"  \"external_urls\": {\r",
											"    \"spotify\": \"string\"\r",
											"  },\r",
											"  \"href\": \"string\",\r",
											"  \"id\": \"string\",\r",
											"  \"images\": [\r",
											"    {\r",
											"      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"      \"height\": 300,\r",
											"      \"width\": 300\r",
											"    }\r",
											"  ],\r",
											"  \"is_externally_hosted\": true,\r",
											"  \"languages\": [\r",
											"    \"string\"\r",
											"  ],\r",
											"  \"media_type\": \"string\",\r",
											"  \"name\": \"string\",\r",
											"  \"publisher\": \"string\",\r",
											"  \"type\": \"show\",\r",
											"  \"uri\": \"string\",\r",
											"  \"episodes\": {\r",
											"    \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"    \"items\": [\r",
											"      {}\r",
											"    ],\r",
											"    \"limit\": 20,\r",
											"    \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"    \"offset\": 0,\r",
											"    \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"    \"total\": 4\r",
											"  }\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/shows/38bS44xjbVVZ3No3ByF1dJ?market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"shows",
										"38bS44xjbVVZ3No3ByF1dJ"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Shows",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"shows\": [\r",
											"    {\r",
											"      \"available_markets\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"copyrights\": [\r",
											"        {\r",
											"          \"text\": \"string\",\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      ],\r",
											"      \"description\": \"string\",\r",
											"      \"html_description\": \"string\",\r",
											"      \"explicit\": true,\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"string\",\r",
											"      \"id\": \"string\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"is_externally_hosted\": true,\r",
											"      \"languages\": [\r",
											"        \"string\"\r",
											"      ],\r",
											"      \"media_type\": \"string\",\r",
											"      \"name\": \"string\",\r",
											"      \"publisher\": \"string\",\r",
											"      \"type\": \"show\",\r",
											"      \"uri\": \"string\"\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/shows?market=ES&ids=5CfCWKI5pZ28U0uOzXkDHe%2C5as3aKmN2k11yfDDDSrvaZ",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"shows"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										},
										{
											"key": "ids",
											"value": "5CfCWKI5pZ28U0uOzXkDHe%2C5as3aKmN2k11yfDDDSrvaZ"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Show Episodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"href\": \"https://api.spotify.com/v1/me/shows?offset=0&limit=20\\n\",\r",
											"  \"items\": [\r",
											"    {}\r",
											"  ],\r",
											"  \"limit\": 20,\r",
											"  \"next\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"offset\": 0,\r",
											"  \"previous\": \"https://api.spotify.com/v1/me/shows?offset=1&limit=1\",\r",
											"  \"total\": 4\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/shows/38bS44xjbVVZ3No3ByF1dJ/episodes?market=ES&limit=10&offset=5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"shows",
										"38bS44xjbVVZ3No3ByF1dJ",
										"episodes"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a single Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"audio_preview_url\": \"https://p.scdn.co/mp3-preview/2f37da1d4221f40b9d1a98cd191f4d6f1646ad17\",\r",
											"  \"description\": \"A Spotify podcast sharing fresh insights on important topics of the moment—in a way only Spotify can. You’ll hear from experts in the music, podcast and tech industries as we discover and uncover stories about our work and the world around us.\\n\",\r",
											"  \"html_description\": \"<p>A Spotify podcast sharing fresh insights on important topics of the moment—in a way only Spotify can. You’ll hear from experts in the music, podcast and tech industries as we discover and uncover stories about our work and the world around us.</p>\\n\",\r",
											"  \"duration_ms\": 1686230,\r",
											"  \"explicit\": true,\r",
											"  \"external_urls\": {\r",
											"    \"spotify\": \"string\"\r",
											"  },\r",
											"  \"href\": \"https://api.spotify.com/v1/episodes/5Xt5DXGzch68nYYamXrNxZ\",\r",
											"  \"id\": \"5Xt5DXGzch68nYYamXrNxZ\",\r",
											"  \"images\": [\r",
											"    {\r",
											"      \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"      \"height\": 300,\r",
											"      \"width\": 300\r",
											"    }\r",
											"  ],\r",
											"  \"is_externally_hosted\": true,\r",
											"  \"is_playable\": true,\r",
											"  \"language\": \"en\",\r",
											"  \"languages\": [\r",
											"    \"fr\",\r",
											"    \"en\"\r",
											"  ],\r",
											"  \"name\": \"Starting Your Own Podcast: Tips, Tricks, and Advice From Anchor Creators\\n\",\r",
											"  \"release_date\": \"1981-12-15\",\r",
											"  \"release_date_precision\": \"day\",\r",
											"  \"resume_point\": {\r",
											"    \"fully_played\": true,\r",
											"    \"resume_position_ms\": 0\r",
											"  },\r",
											"  \"type\": \"episode\",\r",
											"  \"uri\": \"spotify:episode:0zLhl3WsOCQHbe1BPTiHgr\",\r",
											"  \"restrictions\": {\r",
											"    \"reason\": \"string\"\r",
											"  },\r",
											"  \"show\": {\r",
											"    \"available_markets\": [\r",
											"      \"string\"\r",
											"    ],\r",
											"    \"copyrights\": [\r",
											"      {\r",
											"        \"text\": \"string\",\r",
											"        \"type\": \"string\"\r",
											"      }\r",
											"    ],\r",
											"    \"description\": \"string\",\r",
											"    \"html_description\": \"string\",\r",
											"    \"explicit\": true,\r",
											"    \"external_urls\": {\r",
											"      \"spotify\": \"string\"\r",
											"    },\r",
											"    \"href\": \"string\",\r",
											"    \"id\": \"string\",\r",
											"    \"images\": [\r",
											"      {\r",
											"        \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"        \"height\": 300,\r",
											"        \"width\": 300\r",
											"      }\r",
											"    ],\r",
											"    \"is_externally_hosted\": true,\r",
											"    \"languages\": [\r",
											"      \"string\"\r",
											"    ],\r",
											"    \"media_type\": \"string\",\r",
											"    \"name\": \"string\",\r",
											"    \"publisher\": \"string\",\r",
											"    \"type\": \"show\",\r",
											"    \"uri\": \"string\"\r",
											"  }\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/episodes/512ojhOuo1ktJprKbVcKyQ?market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"episodes",
										"512ojhOuo1ktJprKbVcKyQ"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Episodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"let schema = {\r",
											"  \"episodes\": [\r",
											"    {\r",
											"      \"audio_preview_url\": \"https://p.scdn.co/mp3-preview/2f37da1d4221f40b9d1a98cd191f4d6f1646ad17\",\r",
											"      \"description\": \"A Spotify podcast sharing fresh insights on important topics of the moment—in a way only Spotify can. You’ll hear from experts in the music, podcast and tech industries as we discover and uncover stories about our work and the world around us.\\n\",\r",
											"      \"html_description\": \"<p>A Spotify podcast sharing fresh insights on important topics of the moment—in a way only Spotify can. You’ll hear from experts in the music, podcast and tech industries as we discover and uncover stories about our work and the world around us.</p>\\n\",\r",
											"      \"duration_ms\": 1686230,\r",
											"      \"explicit\": true,\r",
											"      \"external_urls\": {\r",
											"        \"spotify\": \"string\"\r",
											"      },\r",
											"      \"href\": \"https://api.spotify.com/v1/episodes/5Xt5DXGzch68nYYamXrNxZ\",\r",
											"      \"id\": \"5Xt5DXGzch68nYYamXrNxZ\",\r",
											"      \"images\": [\r",
											"        {\r",
											"          \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"          \"height\": 300,\r",
											"          \"width\": 300\r",
											"        }\r",
											"      ],\r",
											"      \"is_externally_hosted\": true,\r",
											"      \"is_playable\": true,\r",
											"      \"language\": \"en\",\r",
											"      \"languages\": [\r",
											"        \"fr\",\r",
											"        \"en\"\r",
											"      ],\r",
											"      \"name\": \"Starting Your Own Podcast: Tips, Tricks, and Advice From Anchor Creators\\n\",\r",
											"      \"release_date\": \"1981-12-15\",\r",
											"      \"release_date_precision\": \"day\",\r",
											"      \"resume_point\": {\r",
											"        \"fully_played\": true,\r",
											"        \"resume_position_ms\": 0\r",
											"      },\r",
											"      \"type\": \"episode\",\r",
											"      \"uri\": \"spotify:episode:0zLhl3WsOCQHbe1BPTiHgr\",\r",
											"      \"restrictions\": {\r",
											"        \"reason\": \"string\"\r",
											"      },\r",
											"      \"show\": {\r",
											"        \"available_markets\": [\r",
											"          \"string\"\r",
											"        ],\r",
											"        \"copyrights\": [\r",
											"          {\r",
											"            \"text\": \"string\",\r",
											"            \"type\": \"string\"\r",
											"          }\r",
											"        ],\r",
											"        \"description\": \"string\",\r",
											"        \"html_description\": \"string\",\r",
											"        \"explicit\": true,\r",
											"        \"external_urls\": {\r",
											"          \"spotify\": \"string\"\r",
											"        },\r",
											"        \"href\": \"string\",\r",
											"        \"id\": \"string\",\r",
											"        \"images\": [\r",
											"          {\r",
											"            \"url\": \"https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228\\n\",\r",
											"            \"height\": 300,\r",
											"            \"width\": 300\r",
											"          }\r",
											"        ],\r",
											"        \"is_externally_hosted\": true,\r",
											"        \"languages\": [\r",
											"          \"string\"\r",
											"        ],\r",
											"        \"media_type\": \"string\",\r",
											"        \"name\": \"string\",\r",
											"        \"publisher\": \"string\",\r",
											"        \"type\": \"show\",\r",
											"        \"uri\": \"string\"\r",
											"      }\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/episodes?ids=77o6BIVlYM3msb4MMIL1jH%2C0Q86acNRm6V9GYx55SXKwf&market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"episodes"
									],
									"query": [
										{
											"key": "ids",
											"value": "77o6BIVlYM3msb4MMIL1jH%2C0Q86acNRm6V9GYx55SXKwf"
										},
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Get Several Shows without id (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/shows?market=ES&ids=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"shows"
									],
									"query": [
										{
											"key": "market",
											"value": "ES"
										},
										{
											"key": "ids",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Show Episodes using more than 1 shows id (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/shows/38bS44xjbVVZ3No3ByF1dJ%15146gu3fssSXNcZSntJki/episodes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"shows",
										"38bS44xjbVVZ3No3ByF1dJ%15146gu3fssSXNcZSntJki",
										"episodes"
									],
									"query": [
										{
											"key": "market",
											"value": "ES",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "5",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Show Episodes exceeding the limit (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Invalid limit, cannot be greater than 50\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/shows/38bS44xjbVVZ3No3ByF1dJ/episodes?limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"shows",
										"38bS44xjbVVZ3No3ByF1dJ",
										"episodes"
									],
									"query": [
										{
											"key": "limit",
											"value": "51"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Several Episodes using track ids (400)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"invalid id\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQDEAczRAvtC5uiJ1EkVYPy406AhrYmaC9iTGSCaFEyAuONKw2WO7DAgXTdlwyqByMv9rdpb3JWRKUcMUav7H4TZ_cYtg6R2gBFYSx3y1EsumAZ7WZEOV25Zxw8ByCJv27pZ1aAqtgpCWkT3E05Eq_HKw7uuHAkVwPKGDbKIW1ru4Y0UHr4qzDGO_BhQFpSLEW8czTwLQ05N-a8qDQx0q5pepjiI_HrR1uefS4axacQioCv7n5WBZUk4SFuiSKmtUCTX8XUnL6bpKzVLUw5gTNdOhnSELVYECO1mHW8NGPm0P81ABV63n0sEwtMMDW4b"
									}
								],
								"url": {
									"raw": "{{base_url}}/episodes?ids=1X3QhmybiLqBlSlWM7qUPz%77o6BIVlYM3msb4MMIL1jH%2C0Q86acNRm6V9GYx55SXKwf&market=ES",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"episodes"
									],
									"query": [
										{
											"key": "ids",
											"value": "1X3QhmybiLqBlSlWM7qUPz%77o6BIVlYM3msb4MMIL1jH%2C0Q86acNRm6V9GYx55SXKwf"
										},
										{
											"key": "market",
											"value": "ES"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "PLAYLISTS",
			"item": [
				{
					"name": "Positive",
					"item": [
						{
							"name": "Create a Playlist (private)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)",
											"pm.test(\"Content-Type is valid\", function () {",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
											"});",
											"",
											"//Verify response body schema",
											"var schema = {",
											"    \"type\" : \"object\",",
											"    \"properties\" : { ",
											"        \"collaborative\":  {\"type\" : \"boolean\"},",
											"        \"description\": {\"type\" : [\"string\", \"null\"]},",
											"        \"external_urls\" : {",
											"            \"type\" : \"object\",",
											"            \"properties\" : {",
											"            \"{key}\" : {\"type\" : \"string\"},",
											"            \"{value}\" : {\"type\" : \"string\"},",
											"            },",
											"        },",
											"        \"followers\": {",
											"            \"type\" : \"object\",",
											"            \"properties\" : {",
											"            \"href\": {\"type\" : \"null\"},",
											"            \"total\": {\"type\" : \"integer\"},",
											"            }",
											"        },",
											"        \"href\": {\"type\" : \"string\"},",
											"        \"id\": {\"type\" : \"string\"},",
											"        \"images\": {",
											"            \"type\" : \"array\",",
											"            \"properties\" : {",
											"                \"height\" : {\"type\" : \"integer\"},",
											"                \"url\" : {\"type\" : \"string\"},",
											"                \"width\" : {\"type\" : \"integer\"},",
											"            }",
											"        },",
											"        \"name\": {\"type\" : \"string\"},",
											"        \"owner\": {",
											"            \"type\" : \"object\",",
											"            \"properties\" : {",
											"                \"display_name\" : {\"type\" : \"string\"},",
											"                \"external_urls\" : {",
											"                    \"type\" : \"object\",",
											"                    \"properties\" : {",
											"                    \"{key}\" : {\"type\" : \"string\"},",
											"                    \"{value}\" : {\"type\" : \"string\"},",
											"                    },",
											"                },",
											"                \"followers\": {",
											"                    \"type\" : \"object\",",
											"                    \"properties\" : {",
											"                    \"href\": {\"type\" : \"null\"},",
											"                    \"total\": {\"type\" : \"integer\"},",
											"                    }",
											"                },",
											"                \"href\" : {\"type\" : \"string\"},",
											"                \"id\" : {\"type\" : \"string\"},",
											"                \"images\": {",
											"                    \"type\" : \"array\",",
											"                    \"properties\" : {",
											"                        \"height\" : {\"type\" : \"integer\"},",
											"                        \"url\" : {\"type\" : \"string\"},",
											"                        \"width\" : {\"type\" : \"integer\"},",
											"                            }",
											"                        },",
											"                \"type\" : {\"type\" : \"string\"},",
											"                \"uri\" : {\"type\" : \"string\"},",
											"            }",
											"        },",
											"        \"public\" : {\"type\" : [\"boolean\", \"null\"]},",
											"        \"snapshot_id\" : {\"type\" : \"string\"},",
											"        \"tracks\": {",
											"            \"type\" : \"object\",",
											"            \"properties\" : {",
											"                \"href\": {\"type\" : \"string\"},",
											"                \"items\": {\"type\" : \"array\"},",
											"                \"limit\": {\"type\" : \"integer\"},",
											"                \"next\": {\"type\" : [\"string\", \"null\"]},",
											"                \"offset\": {\"type\" : \"integer\"},",
											"                \"previous\": {\"type\" : [\"string\", \"null\"]},",
											"                \"total\": {\"type\" : \"integer\"},",
											"                }",
											"            },",
											"        \"type\" : {\"type\" : \"string\"},",
											"        \"uri\" : {\"type\" : \"string\"}",
											"    },",
											"        \"required\": [",
											"            \"name\",",
											"            \"public\",",
											"            \"collaborative\",",
											"            \"description\",",
											"        ]",
											"    };",
											"",
											"pm.test('Schema is valid', function () {",
											"   pm.response.to.have.jsonSchema(schema);",
											"});",
											"",
											"//Create environment variables: playlist id and playlist name ",
											"if (pm.expect(pm.response.code).to.be.oneOf([200,201,202]) && pm.response.to.have.jsonSchema(schema)) {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.environment.set(\"playlist_id\", jsonData.id)",
											"    pm.environment.set(\"playlist_name\", jsonData.name);",
											"};",
											"",
											"//Check \"location\" header",
											"pm.test(\"Check location in headers\", function () {",
											"    pm.response.to.have.header(\"location\");",
											"});",
											"",
											"//Verify value \"collaborative\" property (true)",
											"pm.test(\"Collaborative is true \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.collaborative).to.eql(true);",
											"});",
											"",
											"//Verify value \"public\" property (false)",
											"pm.test(\"Public is false \", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.public).to.eql(false);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Playlist for {{$randomFirstName}}\",\n    \"public\" : false,\n    \"collaborative\" : true,\n    \"description\" : \"The private playlist\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/users/{{user_id}}/playlists",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"playlists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Items to a Playlist (through body)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type is valid\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : { \r",
											"        \"snapshot_id\":  {\"type\" : \"string\"}\r",
											"        },\r",
											"        \"required\": [\r",
											"            \"snapshot_id\"\r",
											"        ]\r",
											"    };\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authorization}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"uris\": [\r\n    \"spotify:track:6xKXkSSJqv6ttwL8bj3Dm2\",\r\n    \"spotify:track:5jdIKyEhvubWIzouyrdZqG\",\r\n    \"spotify:track:3v4DPKgpvnRCO4y6MuH6Vt\",\r\n    \"spotify:track:7sRMepOClh09cgoSE0Qhts\",\r\n    \"spotify:track:2LMpbVRoUlT6VoJaHKeCKA\",\r\n    \"spotify:track:399AcV7tO6mAzarHXC3UYH\"  \r\n],\r\n    \"position\": 0\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for tracks",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"///Search for a tracks and save them to environment variable \"uris_track\"\r",
											"pm.sendRequest({\r",
											"    url: 'https://api.spotify.com/v1/search?q=name%3AJonsi&type=track&limit=30',\r",
											"    method: 'GET',\r",
											"    header: {\r",
											"        \"Authorization\": \"Bearer \" + pm.environment.get(\"authorization\")\r",
											"    },\r",
											"    body: {}\r",
											"}, function (err, response) {\r",
											"    var uris = [];\r",
											"    for(var i = 0; i < 30; i++) {\r",
											"        uris.push(response.json().tracks.items[i].uri);\r",
											"        };\r",
											"    console.log(uris);\r",
											"    pm.environment.set(\"uris_tracks\", uris);\r",
											"}\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Save tracks to environment variable \"uris_track\" for next request\r",
											"if (pm.expect(pm.response.code).to.be.oneOf([200,201,202])) {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    var uris = [];\r",
											"    for(var i = 0; i < 30; i++) {\r",
											"        uris.push(jsonData.tracks.items[i].uri);\r",
											"        };\r",
											"    console.log(uris);\r",
											"pm.environment.set(\"uris_tracks\", uris)\r",
											"};"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer BQA6pwT8M22cvGPwLQoBMT_Z41fgTZV9E0_8CWVwkoKBQWmfXSrc828U9zNUdKDk4EBCzxXTs3pXWU6tv5jA8Hyi7HdR4yEhwSBsnUQ6pDPINrW8uio5ItCyJcL2WUSEbuc5ayX8tokD9kZicaabiw2s-9fh41g717ctkKMTmL2X_EWXZkPch0kr-po6W9V6iKQMtFtvAq2PY4ucvJUeJPf94R-uvBWxQvpC2x-YSVpoWMn2K2AG67PTJC8xGuRdW-hLJDxbv47NgEzxvHK9U6f-brhE8JzB7Wv_UTfme8i-2QdqzE9uUAh48k1SzJoo"
									}
								],
								"url": {
									"raw": "{{base_url}}/search?q=name%3AJonsi&type=track&limit=30",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "name%3AJonsi"
										},
										{
											"key": "type",
											"value": "track"
										},
										{
											"key": "limit",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Items to a Playlist (through query)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"///Search for a tracks and save them to environment variable \"uris_track\"\r",
											"pm.sendRequest({\r",
											"    url: 'https://api.spotify.com/v1/search?q=name%3AJonsi&type=track&limit=30',\r",
											"    method: 'GET',\r",
											"    header: {\r",
											"        \"Authorization\": \"Bearer \" + pm.environment.get(\"authorization\")\r",
											"    },\r",
											"    body: {}\r",
											"}, function (err, response) {\r",
											"    var uris = [];\r",
											"    for(var i = 0; i < 30; i++) {\r",
											"        uris.push(response.json().tracks.items[i].uri);\r",
											"        };\r",
											"    console.log(uris);\r",
											"    pm.environment.set(\"uris_tracks\", uris);\r",
											"}\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : { \r",
											"        \"snapshot_id\":  {\"type\" : \"string\"}\r",
											"        },\r",
											"        \"required\": [\r",
											"            \"snapshot_id\"\r",
											"        ]\r",
											"    };\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"//Create environment variable - playlist version \r",
											"if (pm.expect(pm.response.code).to.be.oneOf([200,201,202]) && pm.response.to.have.jsonSchema(schema)) {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.environment.set(\"playlist_version\", jsonData.snapshot_id)\r",
											"};"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{authorization}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "//This track doesn't be added to the playlist, check in the \"Get a Playlist's Items\" request\r\n{\r\n    \"uris\" : [\r\n        {{uri_track}}\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks?uris={{uris_tracks}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									],
									"query": [
										{
											"key": "uris",
											"value": "{{uris_tracks}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get playlist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response body schema (\"fields\" query parameter) \r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : { \r",
											"        \"tracks\":  {\r",
											"        \"type\" : \"object\",\r",
											"        \"properties\" : { \r",
											"            \"items\" : {\r",
											"            \"type\" : \"array\",\r",
											"            \"properties\" : {\r",
											"                \"added_by\" : {\r",
											"                    \"type\" : \"object\",\r",
											"                    \"properties\" : {\r",
											"                        \"id\" : {\"type\" : \"string\"},\r",
											"                        },\r",
											"                    \"required\" : [\"id\"]\r",
											"                },\r",
											"                \"track\" : {\r",
											"                    \"type\" : \"object\",\r",
											"                    \"properties\" : {\r",
											"                        \"name\" : {\"type\" : \"string\"},\r",
											"                        },\r",
											"                    \"required\" : [\"name\"]\r",
											"                    }\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{authorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}?fields=tracks.items(added_by(id),track(name))&market=RU",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}"
									],
									"query": [
										{
											"key": "fields",
											"value": "tracks.items(added_by(id),track(name))"
										},
										{
											"key": "market",
											"value": "RU"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Playlist's Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Check track from \"Add Items to a Playlist (through query)\" request\r",
											"pm.test(\"Track URI didn't added\", function () {\r",
											"    pm.expect(pm.response.text()).to.not.include(pm.environment.get(\"uri_track\"));\r",
											"});\r",
											"\r",
											"//Check offset value (query parameter)\r",
											"pm.test(\"Check offset value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.offset).to.eql(1);\r",
											"});\r",
											"\r",
											"//Create environment variable \"uri_remove\" for next request\r",
											"if (pm.expect(pm.response.code).to.be.oneOf([200,201,202])) {\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    pm.environment.set(\"uri_remove\", jsonData.items[0].track.uri);\r",
											"};\r",
											"\r",
											"/* It's draft for checking the number of tracks\r",
											"pm.test(\"Your test name\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.items[0].track.id).to.have.lengthOf(1);\r",
											"});*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{authorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks?fields=items.track.uri,offset&limit=1&offset=1&market=from_token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									],
									"query": [
										{
											"key": "fields",
											"value": "items.track.uri,offset"
										},
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "offset",
											"value": "1"
										},
										{
											"key": "market",
											"value": "from_token"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Items from a Playlist",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"tracks\": [\r\n        { \r\n        \"uri\": \"{{uri_remove}}\"\r\n        }\r\n    ] \r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Playlist Cover Image",
							"request": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{authorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/images",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change a Playlist's Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"New playlist\"\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reorder a Playlist's Items",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"range_start\" : 0,\r\n    \"insert_before\"\t: 2 \r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace a Playlist's Items",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"uris\": [\r\n        \"spotify:track:7sRMepOClh09cgoSE0Qhts\"\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"});",
									"",
									"//Verify Content-Type header (JSON)",
									"pm.test(\"Content-Type is valid\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Negative",
					"item": [
						{
							"name": "Create playlist (without name)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"//Check the error message\r",
											"pm.test(\"Error message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.error.message).to.eql(\"Missing required field: name\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/{{user_id}}/playlists",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"playlists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create playlist (the name contains more characters than the maximum) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"zZURwnBlmtmdWZ4CkvWPjCcDKWj05aJ71vNfhAZL5n0DIrFu09wF0pSmaiekobbDcsTiL3IOqfAcR7hURzNSK5nMAUQUWvBi4yxtID7jZL3pmDkajaZK5dl2c6aq4V0SM3EgwskPVqHYAV3h35rtoMNdMyEf3I8iZXWRjz6LCUX2UdRBhAIizrYmKEKGttrc8eDeuVlIA\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/{{user_id}}/playlists",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"{{user_id}}",
										"playlists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a tracks (exceeding the limit)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/search?q=a&type=track&limit=51",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "a"
										},
										{
											"key": "type",
											"value": "track"
										},
										{
											"key": "limit",
											"value": "51",
											"description": "Max 50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a tracks (less than the limit)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/search?q=a&type=track&limit=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "a"
										},
										{
											"key": "type",
											"value": "track"
										},
										{
											"key": "limit",
											"value": "0",
											"description": "Min 1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a tracks (exceeding the offset)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/search?q=a&type=track&limit=2&offset=2,001",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "a"
										},
										{
											"key": "type",
											"value": "track"
										},
										{
											"key": "limit",
											"value": "2",
											"description": "Max 50"
										},
										{
											"key": "offset",
											"value": "2,001",
											"description": "Max 2,000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Items from a Playlist (without scopes)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (403)\r",
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"tracks\": [\r\n        { \r\n        \"uri\": \"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\" \r\n        },\r\n        { \r\n        \"uri\": \"spotify:track:1301WleyT98MSxVHPZCA6M\" \r\n        }\r\n    ] \r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reorder a Playlist's Items (another type for parameters)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Verify response status code (400)\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"//Verify Content-Type header (JSON)\r",
											"pm.test(\"Content-Type in JSON format\", function () {\r",
											"     pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Verify response body schema\r",
											"var schema = {\r",
											"    \"type\" : \"object\",\r",
											"    \"properties\" : {\r",
											"        \"error\" : {\r",
											"            \"type\" : \"object\",\r",
											"            \"properties\" : {\r",
											"                \"status\":  {\"type\" : \"integer\"},\r",
											"                \"message\": {\"type\" : \"string\"}\r",
											"                },\r",
											"        \"required\": [\r",
											"                \"status\",\r",
											"                \"message\"\r",
											"            ]\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test(\"Schema is valid\", function () {\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{authorization}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"range_start\" : \"range start\",\r\n    \"insert_before\"\t: \"insert before\" \r\n}"
								},
								"url": {
									"raw": "{{base_url}}/playlists/{{playlist_id}}/tracks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"playlists",
										"{{playlist_id}}",
										"tracks"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status is not OK\", () => {",
									"  pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "PLAYER",
			"item": [
				{
					"name": "Get Available Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer BQBq4MIsyUBGNcdh26vMjf5w2UuSJlsmjnOvw9RmNJSLPpIGHMWIfDXAq6Hbt4F_4sqWO-a9WHgneqCb5GwN2OvyYaRnydQGnmSuSVpd_HcM6qz7ofGdn5soCd5VB1TOWS0SVjFghQTPNSXqvhVeEqP_HW2RX9qHFikfKfknUF634NZiMJJkNi2yiK5b"
							}
						],
						"url": {
							"raw": "{{base_url}}/me/player/devices",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"me",
								"player",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Play",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer BQDF83RQ3dtz3OA51cSdJS3fAL3VdHV829AtKNuLPlmnShcVmxGN2wbjh94wdaeYgiOFqY9mY5EA2mFQgHJE0PHEcGesNfYqQ335Vv9u5V2p6UNVfP1cmEGlYoqa8GRYxQwFoQwXNzbRsm2pxwsH2j_qLKmWZvLdrSuGsWetyvMU49HAoR_zN5VKreS-xvZiqe8Y4yI"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"context_uri\":\"spotify:album:5ht7ItJgpBH7W6vJ5BqpPr\",\"offset\":{\"position\":5},\"position_ms\":0}"
						},
						"url": {
							"raw": "{{base_url}}/me/player/play?device_id=8c6eb25e226fa428f6ca03fd7d83407fabb5b00a",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"me",
								"player",
								"play"
							],
							"query": [
								{
									"key": "device_id",
									"value": "8c6eb25e226fa428f6ca03fd7d83407fabb5b00a"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "scope",
				"value": "playlist-modify-public playlist-modify-private user-library-read user-read-playback-state ugc-image-upload user-read-recently-played user-top-read user-read-playback-position user-read-playback-state user-modify-playback-state user-read-currently-playing playlist-modify-public playlist-modify-private playlist-read-private playlist-read-collaborative user-follow-modify user-follow-read user-library-modify user-library-read user-read-email user-read-private user-read-playback-state user-library-modify user-modify-playback-state user-top-read user-follow-read user-follow-modify user-library-read user-read-playback-position ",
				"type": "string"
			},
			{
				"key": "state",
				"value": "",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://accounts.spotify.com/api/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://accounts.spotify.com/authorize",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://oauth.pstmn.io/v1/callback",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{client_secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{client_id}}",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "Spoti token",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Cookie sp_t is present\", () => {",
					"  pm.expect(pm.cookies.has('sp_t')).to.be.true;",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "client_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_secret",
			"value": "",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "",
			"type": "string"
		}
	]
}